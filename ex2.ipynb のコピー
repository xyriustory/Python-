{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"name":"ex2.ipynb のコピー","provenance":[{"file_id":"https://github.com/UTDataMining/2020A/blob/master/ex2/ex2.ipynb","timestamp":1602488185140}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"xnQHbhA1vRoJ"},"source":["# 課題2 データの記述統計\n","\n","配点\n","- Q1, 4P\n","- Q2-1, 1P\n","- Q2-2, 2P\n","- Q2-3, 1P\n","- Q2-4, 2P"]},{"cell_type":"markdown","metadata":{"id":"-Y6pBRlAvRoL"},"source":["## Q1\n","### 中央値\n","中央値はデータの中心傾向を観察するための記述統計の指標です。同じくデータの中心傾向の指標である平均値と比べると、データの外れ値の影響を受けにくという特徴があります。1変数の$n$個のデータを考えた時、中央値を求めるにはまず、データの値の大きさの順に並び替えます。\n","\n","次に、データの数が奇数個の場合は、大きさの順に並び替えた$(n+1)/2$番目の値、データの数が偶数個の場合は、大きさの順に並び替えた$n/2$番目と$n/2+1$の値の平均の値、をそれぞれデータの中央値とします。\n","\n","### 分散\n","分散はデータのばらつきを観察するための記述統計の指標です。個々のデータがデータ全体の平均からどらぐらいばらついているかを表します。以下の通り、個々のデータの値$x_{i}$とデータ全体の平均の値$\\overline{x}$の差の2乗和をデータ数$n$で割ったものが分散になります。\n","\n","$\\frac{1}{n}\\Sigma^{n}_{i=1}(x_{i}-\\overline{x})^{2}$\n","\n","0から100までの整数を要素とする任意の長さのリストを引数で入力として受け取り、以下を要素とするリストを返す`avg_med_var()`関数を完成させてください。\n","- 入力リストの全ての要素の平均値\n","- 入力リストの全ての要素の中央値\n","- 入力リストの全ての要素の分散"]},{"cell_type":"code","metadata":{"id":"ShV3rssovRoM","executionInfo":{"status":"ok","timestamp":1602493481705,"user_tz":-540,"elapsed":910,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def avg_med_var(input_list):\n","    mean_value=0 #平均値を初期化\n","    med_value=0 # 中央値を初期化\n","    var_value=0 # 分散を初期化\n","    results=[] # 結果のリスト\n","        \n","    input_list.sort() # リストの要素を昇順に並び替え\n","    mid_idx = len(input_list)//2 # リストの中央（長さの半分）のインデックス（必要であれば利用する）\n","    \n","    if len(input_list)%2 == 0: ### リストの長さが偶数か奇数か調べる条件のコード ###\n","        med_value = (input_list[mid_idx-1] + input_list[mid_idx])/2### リストの長さが偶数の時の中央値を計算するコード ###\n","    else:\n","        med_value = input_list[mid_idx]### リストの長さが奇数の時の中央値を計算するコード ###\n","    \n","    mean_value = sum(input_list)/len(input_list) #平均値\n","    mse_value = 0 # データの値と平均値の差の2乗和を初期化\n","    \n","    for value in input_list:### input_listの要素を1つずつ処理するコード ###\n","        mse_value = mse_value + (value - mean_value)**2 ### データの値と平均値の差の2乗和を更新するコード ###\n","    var_value = mse_value / len(input_list)### 分散を計算するコード ###\n","    \n","    results.append(mean_value) \n","    results.append(med_value) \n","    results.append(var_value)\n","    return results   "],"execution_count":56,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YcLR78EEvRoS"},"source":["`avg_med_var()`関数が完成したら、以下のセルを実行して動作を確認してください。"]},{"cell_type":"code","metadata":{"id":"F0UJnsRcvRoT","executionInfo":{"status":"ok","timestamp":1602493481706,"user_tz":-540,"elapsed":903,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"48fcb00f-b6a4-4f13-d7d2-d2ed166c4777","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(avg_med_var([1,4,3,2,5,6,8,7,9,10]))\n","print(avg_med_var([1,4,3,2,5,6,8,7,9,10,11]))"],"execution_count":57,"outputs":[{"output_type":"stream","text":["[5.5, 5.5, 8.25]\n","[6.0, 6, 10.0]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"A4BXyxRHvRoX"},"source":["以下のセルを実行して、実行結果が上記と同じであること確認してください。結果が異なる場合は、作成した`avg_mean_var`関数に誤りがないか確認してください。"]},{"cell_type":"code","metadata":{"id":"RPdHxzaIvRoX","executionInfo":{"status":"ok","timestamp":1602493481706,"user_tz":-540,"elapsed":891,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["# avg_med_var関数の結果を検証するための関数\n","import numpy as np\n","def avg_med_var_test(input_list):\n","    return [np.mean(input_list), np.median(input_list), np.var(input_list)]"],"execution_count":58,"outputs":[]},{"cell_type":"code","metadata":{"id":"cxL0yePlvRoa","executionInfo":{"status":"ok","timestamp":1602493482242,"user_tz":-540,"elapsed":1420,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"7de30344-befa-41d5-f7a3-ce7ce12d1c7b","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(avg_med_var_test([1,4,3,2,5,6,8,7,9,10]))\n","print(avg_med_var_test([1,4,3,2,5,6,8,7,9,10,11]))"],"execution_count":59,"outputs":[{"output_type":"stream","text":["[5.5, 5.5, 8.25]\n","[6.0, 6.0, 10.0]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XD-i5mdLvRoc","executionInfo":{"status":"ok","timestamp":1602493482243,"user_tz":-540,"elapsed":1410,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["assert avg_med_var([1,4,3,2,5,6,8,7,9,10]) == avg_med_var_test([1,4,3,2,5,6,8,7,9,10])\n","assert avg_med_var([1,4,3,2,5,6,8,7,9,10,11]) == avg_med_var_test([1,4,3,2,5,6,8,7,9,10,11])"],"execution_count":60,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UDLMwY7JvRoe"},"source":["# Q2\n","以下のような形式の\"user_score.csv\"ファイルを読み込み、データフレーム`score`を作成します。\n","```Python\n","## user_score.csvファイル\n","user, kokugo, shakai, sugaku, rika\n","1, 30, 43, 51, 63\n","2, 39, 21, 49, 56\n","...\n","```"]},{"cell_type":"code","metadata":{"id":"6nWC1gxzvRoe","executionInfo":{"status":"ok","timestamp":1602493482243,"user_tz":-540,"elapsed":1403,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"e7c80d2a-be74-4ee6-fb7b-ead0dcf0d21b","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["# Colaboratoryでは以下を実行して必要なファイルをダウンロード\n","!wget https://raw.githubusercontent.com/UTDataMining/2020A/master/ex2/user_score.csv"],"execution_count":61,"outputs":[{"output_type":"stream","text":["--2020-10-12 09:04:41--  https://raw.githubusercontent.com/UTDataMining/2020A/master/ex2/user_score.csv\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 2552 (2.5K) [text/plain]\n","Saving to: ‘user_score.csv.1’\n","\n","\ruser_score.csv.1      0%[                    ]       0  --.-KB/s               \ruser_score.csv.1    100%[===================>]   2.49K  --.-KB/s    in 0s      \n","\n","2020-10-12 09:04:41 (48.3 MB/s) - ‘user_score.csv.1’ saved [2552/2552]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"hOGyzXAfvRog","executionInfo":{"status":"ok","timestamp":1602493482243,"user_tz":-540,"elapsed":1391,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"ee47bcde-b479-47ca-f5d8-c29ff5badf7e","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["import pandas as pd\n","score = pd.read_csv('user_score.csv')\n","score.head(5)"],"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>kokugo</th>\n","      <th>shakai</th>\n","      <th>sugaku</th>\n","      <th>rika</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>43</td>\n","      <td>51</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>39</td>\n","      <td>21</td>\n","      <td>49</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>29</td>\n","      <td>30</td>\n","      <td>23</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>95</td>\n","      <td>87</td>\n","      <td>77</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>70</td>\n","      <td>71</td>\n","      <td>78</td>\n","      <td>67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user  kokugo  shakai  sugaku  rika\n","0     1      30      43      51    63\n","1     2      39      21      49    56\n","2     3      29      30      23    57\n","3     4      95      87      77   100\n","4     5      70      71      78    67"]},"metadata":{"tags":[]},"execution_count":62}]},{"cell_type":"markdown","metadata":{"id":"F1IHYp4rvRoi"},"source":["データフレームの`desribe()`メソッドを使って、各教科ごとの記述統計を確認してください\n","\n","[pandas.DataFrame.describe](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.describe.html?highlight=describe#pandas.DataFrame.describe)"]},{"cell_type":"code","metadata":{"id":"Gi-qMt3TvRoj","executionInfo":{"status":"ok","timestamp":1602493482244,"user_tz":-540,"elapsed":1379,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"cb4e7d7f-d148-45a1-b355-676bac1af537","colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["score.describe()\n","score.mean()"],"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["user      83.500000\n","kokugo    52.331325\n","shakai    39.602410\n","sugaku    45.614458\n","rika      49.885542\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":63}]},{"cell_type":"markdown","metadata":{"id":"a-3p_HOBvRol"},"source":["### Q2-1\n","データフレーム`score`から各教科の得点がすべて平均点以上であるようなユーザの数を返す`above_mean()`関数を作成してください"]},{"cell_type":"code","metadata":{"id":"0tIDcif9vRol","executionInfo":{"status":"ok","timestamp":1602493482244,"user_tz":-540,"elapsed":1367,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def above_mean(df):\n","    mean_ko = df['kokugo'].mean()\n","    mean_sh = df['shakai'].mean()\n","    mean_su = df['sugaku'].mean()\n","    mean_ri = df['rika'].mean()\n","    df2 = df[(df['kokugo'] >= mean_ko) & (df['shakai'] >= mean_sh) & (df['sugaku'] >= mean_su) & (df['rika'] >= mean_ri)] #教科名は決め打ちでおk\n","    return df2"],"execution_count":64,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"O4B83MONvRom"},"source":["`above_mean()`関数が完成したら、以下のセルを実行して動作を確認してください。条件満たすユーザは46人となります。"]},{"cell_type":"code","metadata":{"id":"As8mlvM6vRon","executionInfo":{"status":"ok","timestamp":1602493482244,"user_tz":-540,"elapsed":1359,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"33aac5b7-0076-466e-8846-36e0119a4748","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["above_mean(score)"],"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>kokugo</th>\n","      <th>shakai</th>\n","      <th>sugaku</th>\n","      <th>rika</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>95</td>\n","      <td>87</td>\n","      <td>77</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>70</td>\n","      <td>71</td>\n","      <td>78</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>67</td>\n","      <td>53</td>\n","      <td>56</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>70</td>\n","      <td>61</td>\n","      <td>61</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>77</td>\n","      <td>54</td>\n","      <td>58</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>55</td>\n","      <td>42</td>\n","      <td>85</td>\n","      <td>86</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>21</td>\n","      <td>60</td>\n","      <td>80</td>\n","      <td>64</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>22</td>\n","      <td>70</td>\n","      <td>52</td>\n","      <td>75</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>23</td>\n","      <td>82</td>\n","      <td>84</td>\n","      <td>86</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>26</td>\n","      <td>80</td>\n","      <td>63</td>\n","      <td>59</td>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>37</td>\n","      <td>77</td>\n","      <td>70</td>\n","      <td>91</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>38</td>\n","      <td>61</td>\n","      <td>49</td>\n","      <td>71</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>39</td>\n","      <td>84</td>\n","      <td>90</td>\n","      <td>87</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>40</td>\n","      <td>78</td>\n","      <td>43</td>\n","      <td>59</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>43</td>\n","      <td>60</td>\n","      <td>60</td>\n","      <td>85</td>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>45</td>\n","      <td>82</td>\n","      <td>86</td>\n","      <td>75</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>48</td>\n","      <td>72</td>\n","      <td>73</td>\n","      <td>94</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>49</td>\n","      <td>74</td>\n","      <td>63</td>\n","      <td>79</td>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>50</td>\n","      <td>87</td>\n","      <td>85</td>\n","      <td>84</td>\n","      <td>93</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>52</td>\n","      <td>90</td>\n","      <td>68</td>\n","      <td>64</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>59</td>\n","      <td>83</td>\n","      <td>83</td>\n","      <td>58</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>60</td>\n","      <td>73</td>\n","      <td>81</td>\n","      <td>94</td>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>63</td>\n","      <td>62</td>\n","      <td>57</td>\n","      <td>91</td>\n","      <td>83</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>68</td>\n","      <td>74</td>\n","      <td>66</td>\n","      <td>65</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>75</td>\n","      <td>70</td>\n","      <td>87</td>\n","      <td>84</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>83</td>\n","      <td>96</td>\n","      <td>76</td>\n","      <td>90</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>91</td>\n","      <td>76</td>\n","      <td>63</td>\n","      <td>74</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>94</td>\n","      <td>76</td>\n","      <td>42</td>\n","      <td>58</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>95</td>\n","      <td>81</td>\n","      <td>50</td>\n","      <td>61</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>97</td>\n","      <td>89</td>\n","      <td>83</td>\n","      <td>73</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>101</td>\n","      <td>73</td>\n","      <td>74</td>\n","      <td>74</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>107</td>\n","      <td>74</td>\n","      <td>60</td>\n","      <td>57</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>110</th>\n","      <td>111</td>\n","      <td>84</td>\n","      <td>51</td>\n","      <td>76</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>115</th>\n","      <td>116</td>\n","      <td>87</td>\n","      <td>86</td>\n","      <td>77</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>117</td>\n","      <td>68</td>\n","      <td>59</td>\n","      <td>60</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>121</th>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>57</td>\n","      <td>60</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>128</td>\n","      <td>81</td>\n","      <td>53</td>\n","      <td>78</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>129</td>\n","      <td>57</td>\n","      <td>53</td>\n","      <td>75</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>131</td>\n","      <td>86</td>\n","      <td>62</td>\n","      <td>78</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>135</th>\n","      <td>136</td>\n","      <td>66</td>\n","      <td>43</td>\n","      <td>54</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>148</td>\n","      <td>73</td>\n","      <td>60</td>\n","      <td>59</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>151</td>\n","      <td>70</td>\n","      <td>56</td>\n","      <td>76</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>155</td>\n","      <td>77</td>\n","      <td>64</td>\n","      <td>87</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>155</th>\n","      <td>156</td>\n","      <td>91</td>\n","      <td>69</td>\n","      <td>100</td>\n","      <td>83</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>162</td>\n","      <td>82</td>\n","      <td>78</td>\n","      <td>80</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>166</td>\n","      <td>60</td>\n","      <td>85</td>\n","      <td>89</td>\n","      <td>80</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     user  kokugo  shakai  sugaku  rika\n","3       4      95      87      77   100\n","4       5      70      71      78    67\n","5       6      67      53      56    61\n","11     12      70      61      61    71\n","14     15      77      54      58    84\n","17     18      55      42      85    86\n","20     21      60      80      64    72\n","21     22      70      52      75    60\n","22     23      82      84      86    88\n","25     26      80      63      59    73\n","36     37      77      70      91    72\n","37     38      61      49      71    71\n","38     39      84      90      87   100\n","39     40      78      43      59    55\n","42     43      60      60      85    66\n","44     45      82      86      75    84\n","47     48      72      73      94    96\n","48     49      74      63      79    69\n","49     50      87      85      84    93\n","51     52      90      68      64    78\n","58     59      83      83      58    71\n","59     60      73      81      94    85\n","62     63      62      57      91    83\n","67     68      74      66      65    78\n","74     75      70      87      84    88\n","82     83      96      76      90    77\n","90     91      76      63      74    72\n","93     94      76      42      58    51\n","94     95      81      50      61    63\n","96     97      89      83      73    81\n","100   101      73      74      74    61\n","106   107      74      60      57    78\n","110   111      84      51      76    84\n","115   116      87      86      77    78\n","116   117      68      59      60    63\n","121   122      70      57      60    61\n","127   128      81      53      78    81\n","128   129      57      53      75    58\n","130   131      86      62      78    54\n","135   136      66      43      54    72\n","147   148      73      60      59    54\n","150   151      70      56      76    62\n","154   155      77      64      87    71\n","155   156      91      69     100    83\n","161   162      82      78      80    88\n","165   166      60      85      89    80"]},"metadata":{"tags":[]},"execution_count":65}]},{"cell_type":"code","metadata":{"id":"tiAPxG5GvRoo","executionInfo":{"status":"ok","timestamp":1602493482245,"user_tz":-540,"elapsed":1347,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["assert len(above_mean(score)) == 46"],"execution_count":66,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ST2053x3vRop"},"source":["### Q2-2\n","ユーザごとの全教科の得点の総和の値を表す'sum'列をデータフレーム`score`に新たに追加したデータフレームを返す`score_sum()`関数を作成してください。以下のようにして、データフレームの指定した列の行方向の値の和を持つシリーズオブジェクト作ることができます。\n","```Python\n","データフレーム[[列1,列2,...,]].sum(axis=1)\n","```\n","[pandas.DataFrame.sum](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sum.html)"]},{"cell_type":"code","metadata":{"id":"eXhTVn8qvRoq","executionInfo":{"status":"ok","timestamp":1602493482245,"user_tz":-540,"elapsed":1340,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def score_sum(df):\n","    df['sum']= df[['kokugo','shakai','sugaku','rika']].sum(axis=1)### ユーザごとの全教科の得点の総和の値を持つシリーズオブジェクトを作成するコード ###\n","    return df"],"execution_count":67,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"irDo5JECvRor"},"source":["`score_sum()`関数が完成したら、以下のセルを実行して動作を確認してください。'sum'列が追加されていることを確認してください。"]},{"cell_type":"code","metadata":{"id":"pyHGVZwMvRor","executionInfo":{"status":"ok","timestamp":1602493482246,"user_tz":-540,"elapsed":1338,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"db7d59d2-a74e-4d1b-9311-ad294ca4d8c6","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["score = score_sum(score)\n","score.head(5)"],"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>kokugo</th>\n","      <th>shakai</th>\n","      <th>sugaku</th>\n","      <th>rika</th>\n","      <th>sum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>43</td>\n","      <td>51</td>\n","      <td>63</td>\n","      <td>187</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>39</td>\n","      <td>21</td>\n","      <td>49</td>\n","      <td>56</td>\n","      <td>165</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>29</td>\n","      <td>30</td>\n","      <td>23</td>\n","      <td>57</td>\n","      <td>139</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>95</td>\n","      <td>87</td>\n","      <td>77</td>\n","      <td>100</td>\n","      <td>359</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>70</td>\n","      <td>71</td>\n","      <td>78</td>\n","      <td>67</td>\n","      <td>286</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user  kokugo  shakai  sugaku  rika  sum\n","0     1      30      43      51    63  187\n","1     2      39      21      49    56  165\n","2     3      29      30      23    57  139\n","3     4      95      87      77   100  359\n","4     5      70      71      78    67  286"]},"metadata":{"tags":[]},"execution_count":68}]},{"cell_type":"markdown","metadata":{"id":"UICKc1DkvRot"},"source":["全教科の合計得点の上位3人の'user'を1位、2位、3位の順に要素として持つリストを返す`score_top3()`関数を作成させてください。"]},{"cell_type":"code","metadata":{"id":"nOu6dOQHvRot","executionInfo":{"status":"ok","timestamp":1602493482246,"user_tz":-540,"elapsed":1325,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def score_top3(df):\n","    sorted_df = df.sort_values(['sum'],ascending=False)### データフレームを'sum'列の値で並び替えて新しいデータフレームを作成するコード ###\n","    results=[]\n","    results.append(sorted_df.iloc[0,0])### 'sum'が第1位の'user'を抽出するコード ###)\n","    results.append(sorted_df.iloc[1,0])### 'sum'が第2位の'user'を抽出するコード ###)\n","    results.append(sorted_df.iloc[2,0])### 'sum'が第3位の'user'を抽出するコード ###)\n","    return results"],"execution_count":69,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gq154dmOvRou"},"source":["`score_top3()`関数が完成したら、以下のセルを実行して動作を確認してください。`[39, 4, 50]`の'user'が合計得点の上位3人です。"]},{"cell_type":"code","metadata":{"id":"57Qwh1tbvRou","executionInfo":{"status":"ok","timestamp":1602493482247,"user_tz":-540,"elapsed":1320,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"24596952-4173-4b6a-ce42-0409b0488c77","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["score_top3(score)"],"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[39, 4, 50]"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"nYwMPbqqvRov","executionInfo":{"status":"ok","timestamp":1602493482247,"user_tz":-540,"elapsed":1307,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["assert score_top3(score) == [39,4,50]"],"execution_count":71,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RM9qkM6dvRox"},"source":["### Q2-3\n","データフレーム`score`の'sum'列を対象に、以下を階級幅として各階級の度数を要素として持つリストを返す`score_hist()`関数を完成させてください。\n","- 0以上、50以下\n","- 51以上、100以下\n","- 101以上、150以下\n","- 151以上、200以下\n","- 201以上、250以下\n","- 251以上、300以下\n","- 301以上、350以下\n","- 351以上、400以下"]},{"cell_type":"code","metadata":{"id":"3gykFeT4vRox","executionInfo":{"status":"ok","timestamp":1602493482248,"user_tz":-540,"elapsed":1302,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def score_hist(df):\n","    results=[]\n","    results.append(len(df[(df['sum'] >= 0) & (df['sum'] <= 50)]))### 'sum'が0以上、50以下のデータ数を抽出するコード ###)\n","    results.append(len(df[(df['sum'] >= 51) & (df['sum'] <= 100)]))### 'sum'が51以上、100以下のデータ数を抽出するコード ###)\n","    results.append(len(df[(df['sum'] >= 101) & (df['sum'] <= 150)]))### 'sum'が101以上、150以下のデータ数を抽出するコード ###)\n","    results.append(len(df[(df['sum'] >= 151) & (df['sum'] <= 200)]))### 'sum'が151以上、200以下のデータ数を抽出するコード ###)\n","    results.append(len(df[(df['sum'] >= 201) & (df['sum'] <= 250)]))### 'sum'が201以上、250以下のデータ数を抽出するコード ###)\n","    results.append(len(df[(df['sum'] >= 251) & (df['sum'] <= 300)]))### 'sum'が251以上、300以下のデータ数を抽出するコード ###)\n","    results.append(len(df[(df['sum'] >= 301) & (df['sum'] <= 350)]))### 'sum'が301以上、350以下のデータ数を抽出するコード ###)\n","    results.append(len(df[(df['sum'] >= 351) & (df['sum'] <= 400)]))### 'sum'が351以上、400以下のデータ数を抽出するコード ###)\n","    return results"],"execution_count":72,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"t6aLDOEHvRoy"},"source":["`score_hist()`関数が完成したら、以下のセルを実行して動作を確認してください。`[4, 20, 39, 35, 29, 24, 13, 2]`が'sum'の度数分布です。"]},{"cell_type":"code","metadata":{"id":"0Ywsh3YlvRoz","executionInfo":{"status":"ok","timestamp":1602493482248,"user_tz":-540,"elapsed":1298,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"e2c619a2-3a5b-4a89-ad2e-3a73d59b8c0d","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["score_hist(score)"],"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[4, 20, 39, 35, 29, 24, 13, 2]"]},"metadata":{"tags":[]},"execution_count":73}]},{"cell_type":"code","metadata":{"id":"ytzh0FRdvRo0","executionInfo":{"status":"ok","timestamp":1602493482249,"user_tz":-540,"elapsed":1287,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["assert score_hist(score) == [4, 20, 39, 35, 29, 24, 13, 2]"],"execution_count":74,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"o6C9kQILvRo1"},"source":["### Q2-4\n","以下のような形式の\"user_class.csv\"ファイルを読み込み、データフレーム`user_class`を作成します。\n","```Python\n","## user_class.csvファイル\n","'user', 'class'\n","1, 'C'\n","2, 'C'\n","3, 'B'\n","...\n","```"]},{"cell_type":"code","metadata":{"id":"fiTpNUlrvRo1","executionInfo":{"status":"ok","timestamp":1602493482846,"user_tz":-540,"elapsed":1877,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"22e83c90-6835-4c27-840f-40972329b723","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["# Colaboratoryでは以下を実行して必要なファイルをダウンロード\n","!wget https://raw.githubusercontent.com/UTDataMining/2020A/master/ex2/user_class.csv"],"execution_count":75,"outputs":[{"output_type":"stream","text":["--2020-10-12 09:04:41--  https://raw.githubusercontent.com/UTDataMining/2020A/master/ex2/user_class.csv\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 898 [text/plain]\n","Saving to: ‘user_class.csv.1’\n","\n","\ruser_class.csv.1      0%[                    ]       0  --.-KB/s               \ruser_class.csv.1    100%[===================>]     898  --.-KB/s    in 0s      \n","\n","2020-10-12 09:04:41 (45.6 MB/s) - ‘user_class.csv.1’ saved [898/898]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xa4DqmguvRo2","executionInfo":{"status":"ok","timestamp":1602493482847,"user_tz":-540,"elapsed":1866,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"a6b8455f-8523-46a7-b3d0-6ad3b9f8e181","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["user_class = pd.read_csv('user_class.csv')\n","user_class.head(5)"],"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>A</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user class\n","0     1     C\n","1     2     C\n","2     3     B\n","3     4     C\n","4     5     A"]},"metadata":{"tags":[]},"execution_count":76}]},{"cell_type":"markdown","metadata":{"id":"Jyuc_X60vRo4"},"source":["'user'の列の値をキーに、2つのデータフレーム、`user_class`と`score、を結合して新しいデータフレームを作成した上で、データフレームの`groupby`メソッドを使って、'class'をインデックス、'class'ごとの'sum'の最高値を列として持つシリーズオブジェクトを返す`score_by_class()`関数を完成させてください。"]},{"cell_type":"code","metadata":{"id":"X4zDS2uLvRo4","executionInfo":{"status":"ok","timestamp":1602493482847,"user_tz":-540,"elapsed":1853,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def score_by_class(df1, df2):\n","    df3 = pd.merge(df1, df2, on='user') ### user_classとscoreを結合して新しいデータフレームを作成するコード ###\n","    return df3.groupby('class')['sum'].max() ### groupbyメソッドを使って、'class'ごとの'sum'の最高値をシリーズオブジェクトとして抽出するコード ###"],"execution_count":77,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AoCLp6w2vRo5"},"source":["`score_by_class()`関数が完成したら、以下のセルを実行して動作を確認してください。`{'A': 361, 'B': 349, 'C': 359}`が'class'ごとの'sum'の最高値です。"]},{"cell_type":"code","metadata":{"id":"NJX99RjhvRo5","executionInfo":{"status":"ok","timestamp":1602493482848,"user_tz":-540,"elapsed":1848,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"1bbd9fd7-90d5-49a3-fbc0-d68db2d1ecef","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["score_by_class(score, user_class).to_dict()    "],"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'A': 361, 'B': 349, 'C': 359}"]},"metadata":{"tags":[]},"execution_count":78}]},{"cell_type":"code","metadata":{"id":"WSrh2bHjvRo6","executionInfo":{"status":"ok","timestamp":1602493482849,"user_tz":-540,"elapsed":1837,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["assert score_by_class(score, user_class).to_dict()   == {'A': 361, 'B': 349, 'C': 359}"],"execution_count":79,"outputs":[]}]}