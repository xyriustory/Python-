{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"},"colab":{"name":"2-set.ipynb のコピー","provenance":[{"file_id":"https://github.com/UTokyo-IPP/utpython/blob/master/appendix/2-set.ipynb","timestamp":1602686353066}]}},"cells":[{"cell_type":"code","metadata":{"id":"96-VG_wZjPR6"},"source":["##====================================================\n","## このセルを最初に実行せよ---Run this cell initially.\n","##====================================================\n","import sys\n","if 'google.colab' in sys.modules:\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/argsprint.py\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/B1S.xml\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/cos_sim.py\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/sample.py\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/sin.html\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/small.csv\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/text-sample.txt\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/tokyo-july-temps.csv\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/appendix/tokyo-temps.csv"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Id44lrKUjPSC"},"source":["# ▲セット (set)\n","セットについて説明します。\n","\n","参考\n","\n","- https://docs.python.org/ja/3/tutorial/datastructures.html#sets\n","\n","**セット**（**集合**）は、リストと同様に複数の要素から構成されるデータです。\n","セットでは、リストと異なり要素の重複がありません、また要素の順番もありません。\n","\n","セットを作成するには、次のように波括弧で要素を囲みます。\n","辞書と似ていますが、辞書では `:` でキーと値を対応させる必要がありました。"]},{"cell_type":"code","metadata":{"id":"MDWpmcSbjPSD"},"source":["set1= {2, 1, 2, 3, 2, 3, 1, 3, 3, 1}\n","set1 "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BiXLcCI1jPSI"},"source":["type(set1)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8a7zkEVCjPSL"},"source":["セットのデータ型は **`set`** であり、`set` は組み込み関数でもあります。\n","\n","組み込み関数 `set` を用いてもセットを作成することができます。"]},{"cell_type":"code","metadata":{"id":"AdiSDTNPjPSM"},"source":["set([2, 1, 2, 3, 2, 3, 1, 3, 3, 1])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8R0BDU4vjPSO"},"source":["空のセットを作成する場合、次のようにします。（ `{}` では空の辞書が作成されます。）"]},{"cell_type":"code","metadata":{"id":"h1SOOOIIjPSP"},"source":["set2 = set() # 空のセット\n","set2"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IIroeivjjPSR"},"source":["set2 = {} # 空の辞書\n","set2"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-wRpT8RDjPST"},"source":["`set` を用いて、文字列、リストやタプルなどからセットを作成することができます。"]},{"cell_type":"code","metadata":{"id":"JUguu_ywjPSU"},"source":["set([1,1,2,2,2,3])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kdKVP4l9jPSW"},"source":["set((1,1,2,2,2,3))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8BwZSswAjPSY"},"source":["set('aabdceabdae')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"I8-Ib0O-jPSZ"},"source":["set({'apple' : 3, 'pen' : 5})"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YUZg2SPvjPSb"},"source":["## セットの組み込み関数\n","リストなどと同様に、次の関数などはセットにも適用可能です。"]},{"cell_type":"code","metadata":{"id":"WGFO6DkMjPSb"},"source":["len(set1) # 集合を構成する要素数"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cCmyyEhAjPSd"},"source":["x,y,z = set1 # 多重代入\n","x"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RiR8_0ivjPSf"},"source":["2 in set1 # 指定した要素を集合が含むかどうかの判定"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xKYKjGZwjPSh"},"source":["10 in set1 # 指定した要素を集合が含むかどうかの判定"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TInklyNpjPSi"},"source":["10 not in set1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GODLR_96jPSk"},"source":["セットの要素は、順序付けられていないのでインデックスを指定して取り出すことはできません。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"vMX8vAwRjPSk"},"source":["set1[0]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"F8chlm0DjPSl"},"source":["## 練習\n","\n","文字列 `str1` が引数として与えられたとき、`str1` に含まれる要素（文字、すなわち長さ1の文字列）の種類を返す関数 `check_characters` を作成してください（大文字と小文字は区別し、スペースや句読点も1つと数えます）。\n","たとえば、`'aabccc'` には `'a'` と `'b'` と `'c'` が含まれるので、\n","`check_characters('aabccc')` は 3 を返します。\n","\n","以下のセルの `...` のところを書き換えて `check_characters(str1)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"NSBxLeVwjPSl"},"source":["def check_characters(str1):\n","    ..."],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Sn9qmgGnjPSn"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"3_J0HFjEjPSn"},"source":["print(check_characters('Onde a terra acaba e o mar começa') == 13)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6ByoWXKtjPSo"},"source":["## 練習\n","\n","辞書 `dic1` が引数として与えられたとき、`dic1` に登録されているキーの数を返す関数 `check_dicsize` を作成してください。\n","\n","以下のセルの `...` のところを書き換えて `check_dicsize(dic1)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"_aCPgtIyjPSp"},"source":["def check_dicsize(dic1):\n","    ..."],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HLZy6V_5jPSq"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"-Dp1hhtojPSq"},"source":["print(check_dicsize({'apple': 0, 'orange': 2, 'pen': 1}) == 3)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-QqyhohejPSr"},"source":["## **集合演算**\n","複数のセットから、**和集合**・**積集合**・**差集合**・**対称差**を求める集合演算が存在します。"]},{"cell_type":"code","metadata":{"id":"QTQ7VMP5jPSr"},"source":["set1 = {1, 2, 3, 4}\n","set2 = {3, 4, 5, 6}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zaAppv0fjPSt"},"source":["set1 | set2 # 和集合"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"41S4_qRxjPSt"},"source":["set1 & set2 # 積集合"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LdtCbfYijPSv"},"source":["set1 - set2 # 差集合"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xQ-AUBRwjPSw"},"source":["set1 ^ set2 # 対称差"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"or6CzkFDjPSx"},"source":["## **比較演算**\n","数値などを比較するのに用いた比較演算子を用いて、2つのセットを比較することもできます。"]},{"cell_type":"code","metadata":{"id":"jVPDae1UjPSx"},"source":["print({1, 2, 3} == {1, 2, 3})\n","print({1, 2} == {1, 2, 3})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dulu1i6-jPSy"},"source":["print({1, 2, 3} != {1, 2, 3})\n","print({1, 2} != {1, 2, 3})"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5LIUe5zkjPSz"},"source":["`<=` や `<` は、集合の間の包含関係を判定します。"]},{"cell_type":"code","metadata":{"id":"Zo0rkj45jPSz"},"source":["print({1, 2, 3} <= {1, 2, 3})\n","print({1, 2, 3} < {1, 2, 3})\n","print({1, 2} < {1, 2, 3})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rwgIxGA3jPS0"},"source":["print({1, 2} <= {2, 3, 4})"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qjEh3G0PjPS1"},"source":["## セットのメソッド\n","セットにも様々なメソッドが存在します。なお、以下のメソッドは全て破壊的です。"]},{"cell_type":"markdown","metadata":{"id":"xSqYfuZLjPS1"},"source":["### **add**\n","指定した要素を新たにセットに追加します。"]},{"cell_type":"code","metadata":{"id":"8Z-nbGDEjPS1"},"source":["set1 = {1, 2, 3}\n","set1.add(4)\n","set1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Y40QvJkxjPS2"},"source":["### **remove**\n","指定した要素をセットから削除します。\n","その要素がセットに含まれていない場合、エラーになります。"]},{"cell_type":"code","metadata":{"id":"_KFvCrB7jPS2"},"source":["set1.remove(1)\n","set1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"pDNrRtWJjPS3"},"source":["set1.remove(10)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SUxlHbJRjPS4"},"source":["### **discard**\n","指定した要素をセットから削除します。\n","その要素がセットに含まれていなくともエラーになりません。"]},{"cell_type":"code","metadata":{"id":"riRQ-fjbjPS4"},"source":["set1 = {1, 2, 3, 4}\n","set1.discard(1)\n","set1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Rgyc641PjPS5"},"source":["set1.discard(5)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"u481W3MwjPS6"},"source":["### **clear**\n","全ての要素を削除して対象のセットを空にします。"]},{"cell_type":"code","metadata":{"id":"xFnSrZ8XjPS6"},"source":["set1 = {1, 2, 3, 4}\n","set1.clear()\n","set1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"j4xikZQvjPS7"},"source":["### **pop**\n","セットからランダムに1つの要素を取り出します。"]},{"cell_type":"code","metadata":{"id":"HVKDyB-PjPS7"},"source":["set1 = {1, 2, 3, 4}\n","print(set1.pop())\n","print(set1)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Zd1TOm1HjPS8"},"source":["### **union**, **intersection**, **difference**\n","**和集合**・**積集合**・**差集合**・**対称差**を求めるメソッドも存在します。"]},{"cell_type":"code","metadata":{"id":"PQoGWbVxjPS8"},"source":["set1 = {1, 2, 3, 4}\n","set2 = {3, 4, 5, 6}\n","set1.union(set2) # 和集合"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JKnkFwQijPS9"},"source":["set1.intersection(set2) # 積集合"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bRasrx93jPS-"},"source":["set1.difference(set2) # 差集合"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"27RoIba1jPS_"},"source":["set1.symmetric_difference(set2) # 対称差"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f0ICN849jPS_"},"source":["## 練習\n","\n","英語の文章からなる文字列 `str_engsentences` が引数として与えられたとき、`str_engsentences` 中に含まれる単語の種類数を返す関数 `count_words2` を作成してください。\n","\n","以下のセルの `...` のところを書き換えて `count_words2(str_engsentences)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"Ui0Qo4p-jPTA"},"source":["def count_words2(str_engsentences):\n","    ..."],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6HkzBFidjPTA"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"za17G1m3jPTB"},"source":["print(count_words2('From Stettin in the Baltic to Trieste in the Adriatic an iron curtain has descended across the Continent.') == 15)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4Aky9Sn2jPTB"},"source":["## 練習の解答"]},{"cell_type":"code","metadata":{"id":"1znAkrl3jPTB"},"source":["def check_characters(str1):\n","    set1 = set(str1)\n","    return len(set1)\n","#check_characters('Onde a terra acaba e o mar começa') "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WNygBNvOjPTC"},"source":["def check_dicsize(dic1):\n","    return len(set(dic1))\n","#check_dicsize({'apple': 0, 'orange': 2, 'pen': 1})"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6ch_mXHzjPTD"},"source":["実は `len` は辞書に対してキーの数を返すので、セットを使う必要はありません。"]},{"cell_type":"code","metadata":{"id":"yVgARuH4jPTD"},"source":["def check_dicsize(dic1):\n","    return len(dic1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xl1zIC4XjPTE"},"source":["def count_words2(str_engsentences):\n","    str1 = str_engsentences.replace('.', '') # 句読点を削除する\n","    str1 = str1.replace(',', '')\n","    str1 = str1.replace(':', '')\n","    str1 = str1.replace(';', '')\n","    str1 = str1.replace('!', '')\n","    str1 = str1.replace('?', '')\n","    list1 = str1.split(' ') # 句読点を削除した文字列を、単語ごとにリストに格納する\n","    set1 = set(list1) # リストを集合に変換して同じ要素を1つにまとめる\n","    return len(set1)\n","#count_words2('From Stettin in the Baltic to Trieste in the Adriatic an iron curtain has descended across the Continent.')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Jmt9dMUfjPTF"},"source":[""],"execution_count":null,"outputs":[]}]}