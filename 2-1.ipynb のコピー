{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"},"colab":{"name":"2-1.ipynb のコピー","provenance":[{"file_id":"https://github.com/UTokyo-IPP/utpython/blob/master/2/2-1.ipynb","timestamp":1600849444425}]}},"cells":[{"cell_type":"markdown","metadata":{"id":"NAfsNTB0D-pa"},"source":["# 2-1. 文字列 (string)\n","\n","文書処理などに必要な文字列について説明します。\n","\n","参考\n","\n","- https://docs.python.org/ja/3/tutorial/introduction.html#strings\n","\n","Pythonが扱うデータには様々な種類がありますが、**文字列**はいくつかの文字の並びから構成されるデータです。\n","Pythonは標準で多言語に対応しており、\n","英語アルファベットだけではなく日本語をはじめとする多くの言語を取り扱えます。\n","\n","文字列は、文字の並びをシングルクォート `'...'`、もしくはダブルクォート `\"...\"` で囲んで記述します。\n","\n","以下の例では文字列をそれぞれ、変数 `word1`, `word2` に代入しています。"]},{"cell_type":"code","metadata":{"id":"Cl90JM93D-pg","executionInfo":{"status":"ok","timestamp":1600849894307,"user_tz":-540,"elapsed":750,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"ba430b10-bc79-466f-b974-149ff8964289","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["word1 = 'hello'\n","word1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'hello'"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"ZhMxj0maD-p3","executionInfo":{"status":"ok","timestamp":1600849894649,"user_tz":-540,"elapsed":1088,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"4fa803f0-61d0-46dd-da88-1485eabf0066","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["word2 = 'Hello'\n","word2"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Hello'"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"kOGC8mEoD-qL"},"source":["上の変数の値が確かに文字列であることは、組み込み関数 **`type`** によって確認できます。\n","`type` は、任意のデータを引数として、そのデータの種類を返します。\n","データの種類は、**データ型**もしくは**型**と呼ばれます。"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"g3gWynxhD-qP","executionInfo":{"status":"ok","timestamp":1600849894650,"user_tz":-540,"elapsed":1070,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"5bc73ed3-6e46-4d21-a78b-290e96cdb8d0","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["type(word1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"WU9hG85jD-qm"},"source":["**`str`** は文字列のデータ型を意味します。"]},{"cell_type":"code","metadata":{"id":"PsR9nmFWD-qo","executionInfo":{"status":"ok","timestamp":1600849894650,"user_tz":-540,"elapsed":1068,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"845c7fd8-0fa1-4ff2-db26-857a5cb016a7","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["type(word2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"Wv2Jh13sD-q0"},"source":["`str` は組み込み関数としても用いられます。\n","組み込み関数 **`str`** を使えば、任意のデータを文字列に変換できます。\n","一般に、データ型は、そのデータ型への変換を行う関数として用いられることが多いです。\n","\n","1-1で学んだ数値を文字列に変換したい場合、次のように行います。"]},{"cell_type":"code","metadata":{"id":"m4M1YGKxD-q2","executionInfo":{"status":"ok","timestamp":1600849894651,"user_tz":-540,"elapsed":1053,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"d34933dc-2864-45ba-f2fd-d3fdda6462e1","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["word3 = str(123)\n","word3"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'123'"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"QFPvoEMWD-rI"},"source":["逆に、`'123'` という文字列を整数に変換するには、1-1で述べた **`int`** という関数を用いることができます。\n","（実は `int` は整数の型でもあります。）"]},{"cell_type":"code","metadata":{"id":"g1R8M0cmD-rK","executionInfo":{"status":"ok","timestamp":1600849894652,"user_tz":-540,"elapsed":1036,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"e4be7ab7-844d-4a19-867c-b582d6e1f474","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["i = int('123')\n","i"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["123"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"TEvL0QSGD-rW"},"source":["関数 **`float`** を用いれば文字列を実数に変換できます。"]},{"cell_type":"code","metadata":{"id":"LOHnjB_aD-rZ","executionInfo":{"status":"ok","timestamp":1600849894653,"user_tz":-540,"elapsed":1035,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"c497f9b3-da8e-4030-d929-b5350322993b","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["f = float('123.4')\n","f"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["123.4"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"Z80CwVg6D-rm"},"source":["文字列の長さは、組み込み関数 **`len`** を用いて次のようにして求めます。"]},{"cell_type":"code","metadata":{"id":"xzhjf2UDD-rp","executionInfo":{"status":"ok","timestamp":1600849894654,"user_tz":-540,"elapsed":1020,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"2de7b5cf-fd25-4242-98e5-0083f22da471","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["len(word1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"7htyygqYD-rz"},"source":["複数行にわたる文字列を記述するには、トリプルクォート（`'''...'''` もしくは `\"\"\"...\"\"\"`）を用いることができます。\n","上記の参考URLを参照してください。\n","トリプルクォートはコメントとしても用いられます。\n","なお、1-4 のコーディングスタイルのところで紹介したスタイルガイドのPEP8では、\n","トリプルクォートには `\"\"\"...\"\"\"` を使うのが適切と定められています。"]},{"cell_type":"markdown","metadata":{"id":"bcjrlgL1D-r2"},"source":["## 文字列とインデックス\n","\n","文字列はいくつかの文字によって構成されています。\n","\n","文字列 `'hello'` の3番目の文字を得たい場合は、以下のような記法を用います。"]},{"cell_type":"code","metadata":{"id":"JdZmWB7wD-r4","executionInfo":{"status":"ok","timestamp":1600849894656,"user_tz":-540,"elapsed":1019,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"6afaf895-0744-4b56-903a-aee297f32c6d","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["'hello'[2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'l'"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"WHdb0ka8D-r9"},"source":["文字列を値とする変数に対しても同様の記法を用います。多くの場合は変数に対してこの記法を用います。"]},{"cell_type":"code","metadata":{"id":"KnDqiV0GD-r-","executionInfo":{"status":"ok","timestamp":1600849894657,"user_tz":-540,"elapsed":1016,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"c8c6cead-3f39-434f-fa7c-c242ac127b85","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["word1 = 'hello'\n","word1[2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'l'"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"hXthu-EdD-sF"},"source":["この括弧内の数値のことを**インデックス**と呼びます。インデックスは `0` から始まるので、\n","ある文字列の `x` 番目の要素を得るには、インデックスとして `x-1` を指定する必要があります。\n","\n","こうして取得した文字は、Pythonでは長さが 1 の文字列として扱われます。\n","（プログラミング言語によっては、文字列ではなく別の型のデータとして扱われるものもありますので注意してください。）"]},{"cell_type":"markdown","metadata":{"id":"qEFRAkZXD-sG"},"source":["文字列に対して、インデックスを指定してその要素を変更することはできません。（次のセルはエラーとなります）\n","Pythonのデータは、大きく、変更可能なものと変更不可能なものに分類できますが、\n","文字列は変更不可能なデータです。\n","したがって、文字列を加工する場合は、新たに別の文字列を作成します。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"xBoLssZuD-sH","executionInfo":{"status":"error","timestamp":1600849895122,"user_tz":-540,"elapsed":1477,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"4b012dfb-2c2f-48bd-d4d9-0ee0e1011f85","colab":{"base_uri":"https://localhost:8080/","height":181}},"source":["word1 = 'hello'\n","word1[0] = 'H'"],"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-e17d071bd021>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mword1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'hello'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mword1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'H'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'str' object does not support item assignment"]}]},{"cell_type":"markdown","metadata":{"id":"XkIgfItaD-sM"},"source":["また、文字列の長さ以上のインデックスを指定することはできません。（次はエラーとなります）"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"WfZe80W9D-sN","executionInfo":{"status":"error","timestamp":1600849960188,"user_tz":-540,"elapsed":506,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"030930b6-7c50-434e-9553-ffd325927c74","colab":{"base_uri":"https://localhost:8080/","height":164}},"source":["word1[100]"],"execution_count":null,"outputs":[{"output_type":"error","ename":"IndexError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-18-bd01561922a5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mword1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mIndexError\u001b[0m: string index out of range"]}]},{"cell_type":"markdown","metadata":{"id":"bkSY0oEGD-sU"},"source":["インデックスに負数を指定すると、\n","文字列を後ろから数えた順序に従って文字列を構成する文字を得ます。\n","たとえば、文字列の最後の文字を取得するには、`-1` を指定します。"]},{"cell_type":"code","metadata":{"id":"4g640v-hD-sV","executionInfo":{"status":"ok","timestamp":1600850019459,"user_tz":-540,"elapsed":519,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"c91953bb-40a0-4cdd-a355-180b91d8e37f","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["word1[-1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'o'"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"ZRwueRwMD-sY"},"source":["まとめると文字列 `hello` の正負のインデックスは以下の表の関係になります。  \n","\n","|インデックス|h|e|l|l|o|\n","|-|--|--|--|--|--|\n","|0か正|0|1|2|3|4|\n","|負|-5|-4|-3|-2|-1|"]},{"cell_type":"markdown","metadata":{"id":"oDMeS7KfD-sY"},"source":["## 文字列とスライス\n","**スライス**と呼ばれる機能を利用して、文字列の一部（部分文字列）を取得できます。\n","\n","具体的には、取得したい部分文字列の先頭の文字のインデックスと最後の文字のインデックスに\n","`1` を加えた値を指定します。\n","たとえば、ある文字列の2番目の文字から4番目までの文字の部分文字列を得るには次のようにします。"]},{"cell_type":"code","metadata":{"id":"d3aCWz8oD-sZ","executionInfo":{"status":"ok","timestamp":1600850149104,"user_tz":-540,"elapsed":461,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"c44f83dd-93c2-4df1-f7ee-5d1db455a7e6","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1='0123456789'\n","digits1[1:4]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'123'"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"RnORxG4PD-se"},"source":["文字列の先頭（すなわち、インデックスが `0` の文字）を指定する場合、次のように行えます。"]},{"cell_type":"code","metadata":{"id":"uIu-BGUHD-sf","executionInfo":{"status":"ok","timestamp":1600850155365,"user_tz":-540,"elapsed":540,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"8c1dddff-ae6a-4611-fea7-972b2637bd72","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1[0:3]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'012'"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"sZFx6NweD-sn"},"source":["しかし、最初の `0` は省略しても同じ結果となります。"]},{"cell_type":"code","metadata":{"id":"_hgIe0XQD-so","executionInfo":{"status":"ok","timestamp":1600850158501,"user_tz":-540,"elapsed":506,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"cbb09b4c-ab43-4d65-a514-3a6c9a667693","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1[:3]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'012'"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"NOAJfcq6D-su"},"source":["同様に、最後尾の文字のインデックスも、値を省略することもできます。"]},{"cell_type":"code","metadata":{"id":"-f80KPNCD-sv","executionInfo":{"status":"ok","timestamp":1600850160878,"user_tz":-540,"elapsed":542,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"2c985916-2593-43e4-ee11-11565a333367","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1[3:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'3456789'"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"BIuz2hYxD-s1","executionInfo":{"status":"ok","timestamp":1600850162243,"user_tz":-540,"elapsed":520,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"78c8f7e7-fc86-456f-f431-16716681f29d","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1[3:5]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'34'"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"markdown","metadata":{"id":"zOJUM9XMD-s7"},"source":["スライスにおいても負数を指定して、\n","文字列の最後の方から部分文字列を取得できます。"]},{"cell_type":"code","metadata":{"id":"7ryojMNID-s8","executionInfo":{"status":"ok","timestamp":1600850551768,"user_tz":-540,"elapsed":636,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"d80f9f79-056f-407e-fffa-0cd00c1ffdc3","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1[-1:-4:-1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'987'"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"markdown","metadata":{"id":"n9Ao34QwD-tB"},"source":["スライスでは3番目の値を指定することで、とびとびの文字を指定できます。次のように `digits1[3:9:2]` と指定すると、インデックス `3` から2文字おきにインデックス `9` より小さい文字を並べた部分文字列を得ます。"]},{"cell_type":"code","metadata":{"id":"ha-CjcYoD-tC","executionInfo":{"status":"ok","timestamp":1600850177714,"user_tz":-540,"elapsed":518,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"0b6bc2b5-5fab-4824-c235-8c7470862e37","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1[3:9:2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'357'"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"I39X5CMVD-tH"},"source":["3番目の値に `-1` を指定することもできます。これを使えば元の文字列の逆向きの文字列を得ることができます。"]},{"cell_type":"code","metadata":{"id":"osnA3bFRD-tI","executionInfo":{"status":"ok","timestamp":1600850447799,"user_tz":-540,"elapsed":507,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"b5671024-deec-4acd-e935-9ad8f7df27bd","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["digits1[8:4:-1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'8765'"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"3HoM7gsYD-tO"},"source":["## 空文字列\n","シングルクォート（もしくはダブルクォート）で、何も囲まない場合、長さ 0 の文字列（**空文字列**（くうもじれつ）もしくは、**空列**（くうれつ））となります。\n","具体的には、下記のように使用します。\n","\n","---\n","```Python\n","blank = ''\n","```\n","---\n","\n","空文字列は、次のように、たとえば文字列中からある部分文字列を取り除くのに使用します。\n","（`replace` は後で説明します。）"]},{"cell_type":"code","metadata":{"id":"-oXosL7UD-tP"},"source":["price = '2,980円'\n","price.replace(',', '')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zaOTg20VD-tV"},"source":["文字列のスライスにおいて、指定したインデックスの範囲に文字列が存在しない場合、\n","たとえば、最初に指定したインデックス `x` に対して、\n","2番目のインデックスの値に `x` 以下のインデックスの値を指定するとどうなるでしょうか？\n","（ただし、2つのインデックスは同じ符号を持つとし、スライスの3番目の値は用いないとします。）\n","このような場合、結果は次のように空文字列となります（エラーが出たり、結果が `None` にはならないことに注意してください）。"]},{"cell_type":"code","metadata":{"scrolled":true,"id":"Bzh7M0imD-tW","executionInfo":{"status":"ok","timestamp":1600851412842,"user_tz":-540,"elapsed":551,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"ce613b78-49b7-4a7b-d0c7-306f96607e41","colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["digits1='0123456789'\n","print('空文字列1 = ', digits1[4:2])\n","print('空文字列2 = ', digits1[-1:-4])\n","print('空文字列3 = ', digits1[3:3])\n","print('空文字列ではない = ', digits1[3:-1])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["空文字列1 =  \n","空文字列2 =  \n","空文字列3 =  \n","空文字列ではない =  345678\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"S9Cm3eZzD-tZ"},"source":["## 文字列の検索\n","\n","`文字列A` が `文字列B` を含むかどうかを調べるには、**`in`** 演算子を使います。\n","具体的には、次のように使用します。\n","\n","---\n","```Python\n","文字列B in 文字列A\n","```\n","---\n","\n","調べたい `文字列B` が含まれていれば `True` が、そうでなければ `False` が返ります。"]},{"cell_type":"code","metadata":{"id":"lET7RwX0D-tZ","executionInfo":{"status":"ok","timestamp":1600851498507,"user_tz":-540,"elapsed":578,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"c5e887c1-0be0-420c-c2ad-a01294cdfb40","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["'lo' in 'hello'"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"code","metadata":{"id":"3bV3zo4KD-td","executionInfo":{"status":"ok","timestamp":1600851499430,"user_tz":-540,"elapsed":409,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"e644b2a6-7c47-4502-9faa-17bcb7b2d8c3","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["'z' in 'hello'"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"markdown","metadata":{"id":"06OStMhyD-tk"},"source":["実際のプログラムでは文字列を値とする変数を用いることが多いでしょう。"]},{"cell_type":"code","metadata":{"id":"t95MmU3MD-tl","executionInfo":{"status":"ok","timestamp":1600851508390,"user_tz":-540,"elapsed":600,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"61db8743-182e-4b88-c6af-b5bdddf05677","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["word1 =  'hello'\n","substr1 = 'lo'\n","substr1 in word1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"nShmE4a5D-to","executionInfo":{"status":"ok","timestamp":1600851509621,"user_tz":-540,"elapsed":522,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"3cb43318-a7f4-4479-cb3b-2c6af3ecca88","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["substr2 = 'z'\n","substr2 in word1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"markdown","metadata":{"id":"LybA3ChTD-tt"},"source":["**`not in`** 演算子は、`in` 演算子の逆を意味します。"]},{"cell_type":"code","metadata":{"id":"XWbxjQQGD-tv","executionInfo":{"status":"ok","timestamp":1600851519943,"user_tz":-540,"elapsed":544,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"47bf035f-8a77-4707-8be0-a2d4f93b6dea","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["word1 =  'hello'\n","substr2 = 'z'\n","substr2 not in word1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"_pJ-KybgD-ty"},"source":["## ▲エスケープシーケンス\n","文字列を作成するにはシングル `'` あるいはダブルクォート `\"` で囲むと説明しました。\n","これらの文字を含む文字列を作成するには、**エスケープシーケンス**と呼ばれる特殊な文字列を使う必要があります。\n","\n","たとえば、下のように文字列に `'` を含む文字列を `'` で囲むと文字列の範囲がずれてエラーとなります。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"KTAa4ucID-tz","executionInfo":{"status":"error","timestamp":1600851602238,"user_tz":-540,"elapsed":504,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"6167010a-f20f-47fb-9dcc-5fdec048e3b1","colab":{"base_uri":"https://localhost:8080/","height":130}},"source":["non_escaped = 'This is 'MINE''\n","non_escaped"],"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-41-1ce57246475b>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    non_escaped = 'This is 'MINE''\u001b[0m\n\u001b[0m                               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"markdown","metadata":{"id":"PnwgvSsTD-t3"},"source":["エラーを避けるには、エスケープシーケンスで `'` を記述します、具体的には `'` の前に `\\` と記述すると、`'` を含む文字列を作成できます。"]},{"cell_type":"code","metadata":{"id":"FHt1a0PrD-t4","executionInfo":{"status":"ok","timestamp":1600851607675,"user_tz":-540,"elapsed":507,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"b4f7a977-b1c5-4a51-8b4a-746f4889ab5e","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["escaped1 = 'This is \\'MINE\\''\n","escaped1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["\"This is 'MINE'\""]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"markdown","metadata":{"id":"HZSqVg9AD-t6"},"source":["実は、シングルクォートで囲む代わりにダブルクォートを使えばエスケープシーケンスを使わずに記述できます。"]},{"cell_type":"code","metadata":{"id":"RJDaKYwOD-t7","executionInfo":{"status":"ok","timestamp":1600851615003,"user_tz":-540,"elapsed":493,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"938f0e8b-704f-4ebf-e74f-c39cd6c1ee48","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["doublequated = \"This is 'MINE'\"\n","doublequated"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["\"This is 'MINE'\""]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"markdown","metadata":{"id":"d8fB1n5FD-t9"},"source":["他にも、ダブルクォートを表す `\\\"`、`\\` を表す `\\\\` 、改行を表す `\\n` など、様々なエスケープシーケンスがあります。 "]},{"cell_type":"code","metadata":{"scrolled":true,"id":"Up2lGmg5D-t9","executionInfo":{"status":"ok","timestamp":1600851620215,"user_tz":-540,"elapsed":643,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"201a55e9-f061-479e-9232-d5d7e2571c16","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["escaped2 = \"時は金なり\\n\\\"Time is money\\\"\\nTime is \\\\\"\n","print(escaped2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["時は金なり\n","\"Time is money\"\n","Time is \\\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"MbR9c-7GD-t_"},"source":["3連のシングルクォート、もしくはダブルクォートを利用すれば、 `\\\"` や `\\n` を使わずに記述できます。"]},{"cell_type":"code","metadata":{"id":"LNupla4nD-uA","executionInfo":{"status":"ok","timestamp":1600851882114,"user_tz":-540,"elapsed":669,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"56ec6539-e09c-4416-e8be-29a157571a4e","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["triple_single_quated = '''時は金なり\n","'Time is money'\n","Time is \\\\''' \n","print(triple_single_quated)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["時は金なり\n","'Time is money'\n","Time is \\\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rjS5tKMZD-uE","executionInfo":{"status":"ok","timestamp":1600851882991,"user_tz":-540,"elapsed":485,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"66447189-d536-412a-8dbd-a94cd8609ac7","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["triple_double_quated = \"\"\"時は金なり\n","'Time is money'\n","Time is \\\\\"\"\" \n","print(triple_single_quated)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["時は金なり\n","'Time is money'\n","Time is \\\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kzQf4snvD-uK"},"source":["なお、プログラムの一部を無効に（コメントアウト）したいとき、\n","3連のクォートで囲んで文字列にしてしまうことがあります。"]},{"cell_type":"markdown","metadata":{"id":"V3D2Jsc1D-uM"},"source":["## バックスラッシュの表示と入力\n","\n","エスケープシーケンスの先頭にある文字は、バックスラッシュ `\\`（Unicode `U+005C`）です。\n","これはPythonに限った話ではないですが、バックスラッシュは環境（正確にはフォント）によって見え方が異なります。\n","Windows上のフォントでは、円記号 `¥` として見えることが多いです。\n","macOS上のフォントでは、そのままバックスラッシュとして見えることが多いです。\n","\n","JIS配列キーボードでは、バックスラッシュキーがないことがあります。\n","Windows上では、円記号 `¥` キーでバックスラッシュが入力できます。\n","macOS上では、`Alt` + `¥` キーでバックスラッシュが入力できます。\n","ただし、IME設定によっても入力方法は変わるので注意してください。"]},{"cell_type":"code","metadata":{"id":"psh91F16D-uN"},"source":["print('\\n') # 改行文字（バックスラッシュ + n）\n","print('¥n') # 改行文字でない（円記号 + n）\n","print('⧵n') # 改行文字でない（Unicode U+29F5 のバックスラッシュ演算子 + n）"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"s_ow05vHD-uS"},"source":["## 文字列の連結\n","**`+`** 演算子を用いれば文字列同士を**連結**できます。\n","この演算では新しい文字列が作られ、元の文字列は変化しません。"]},{"cell_type":"code","metadata":{"id":"u6R4VF5AD-uT"},"source":["word1 = 'hello'\n","word2 = ' world'\n","text1 = word1 + word2\n","text1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UpiVPBpuD-uW"},"source":["**`*`** 演算子で文字列の繰り返し回数を指定できます。"]},{"cell_type":"code","metadata":{"id":"InGrcFqmD-uX"},"source":["word1 = 'hello'\n","word1 * 3"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NPlaRW3DD-ua"},"source":["## 文字列とメソッド\n","文字列に対する操作を行うため、様々な**メソッド**（関数のようなもの）が用意されています。\n","\n","メソッドは必要に応じて `(...)` 内に引数を与え、以下のように使用します。\n","\n","---\n","```Python\n","文字列.メソッド名(式, ...)\n","# あるいは\n","文字列変数.メソッド名(式, ...)\n","```\n","---\n","\n","文字列には以下のようなメソッドが用意されています。"]},{"cell_type":"markdown","metadata":{"id":"4uo4iWmwD-ua"},"source":["### **置換**\n","\n","**`replace`** メソッドは、指定した `部分文字列A` を、別に指定した `文字列B` で置き換えた文字列を作成します。\n","この操作では、元の文字列は変化しません。具体的には、次のように使用します。\n","\n","---\n","```Python\n","文字列.replace(部分文字列A, 文字列B)\n","```\n","---"]},{"cell_type":"code","metadata":{"id":"c4ph1SqtD-ub","executionInfo":{"status":"ok","timestamp":1600853009926,"user_tz":-540,"elapsed":659,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"393cf33c-6e46-4c56-fe1b-6238b406310e","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["word1 = 'hello'\n","word1.replace('l', '123')\n","word1.replace('h','H')\n","#word2 = word1.replace('e','a').replace('o','a')\n","#print(word2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Hello'"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"code","metadata":{"id":"Oj7VeY2PD-ud"},"source":["word1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3wT0j_SED-uf"},"source":["### 練習\n","\n","英語の文章からなる文字列 `str_engsentences` が引数として与えられたとき、`str_engsentences` 中に含まれる全ての句読点（`.`, `,`, `:`, `;`, `!`, `?`）を削除した文字列を返す関数 `remove_punctuations` を作成してください。\n","（練習の解答はこのノートブックの一番最後にあります。）\n","\n","次のセルの `...` のところを書き換えて `remove_punctuations(str_engsentences)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"ze42gSQzD-ug"},"source":["def remove_punctuations(str_engsentences):\n","    str1 = str_engsentences.replace('.','')\n","    str2 = str1.replace(',','')\n","    str3 = str2.replace('?','')\n","    str4 = str3.replace(':','')\n","    str5 = str4.replace(';','')\n","    str6 = str5.replace('!','')\n","    return  str6"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"I6Tp8l4DD-uh"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"j0yVXicaD-ui","executionInfo":{"status":"ok","timestamp":1600852773828,"user_tz":-540,"elapsed":567,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"2aa84307-3ad6-47c6-94a8-7fa0d1cb2351","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["print(remove_punctuations('Quiet, uh, donations, you want me to make a donation to the coast guard youth auxiliary?') == 'Quiet uh donations you want me to make a donation to the coast guard youth auxiliary')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"KU14tPsuD-uk"},"source":["### 練習\n","\n","ATGCの4種類の文字から成る文字列 `str_atgc` が引数として与えられたとき、文字列 `str_pair` を返す関数 `atgc_bppair` を作成してください。ただし、`str_pair` は、`str_atgc` 中の各文字列に対して、\n","`A` を `T` に、`T` を `A` に、`G` を `C` に、`C` を `G` に置き換えたものです。\n","\n","次のセルの `...` のところを書き換えて `atgc_bppair(str_atgc)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"ySA_4tbGD-ul"},"source":["def atgc_bppair(str_atgc):\n","    str1 = str_atgc.replace('A','B').replace('T','U').replace('G','H').replace('C','D')\n","    str2 = str1.replace('B','T').replace('U','A').replace('H','C').replace('D','G')\n","    return str2"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-YlGX_khD-uo"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"RXFewb_LD-up","executionInfo":{"status":"ok","timestamp":1600853210838,"user_tz":-540,"elapsed":434,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"30a579ab-cc25-4b55-c55a-aca7deb74911","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["print(atgc_bppair('AAGCCCCATGGTAA') == 'TTCGGGGTACCATT')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"EWeTEJHFD-us"},"source":["### **分割**\n","\n","**`split`** メソッドは、指定した `区切り文字列B` で、`文字列A` を分割して、リストと呼ばれるデータに格納します。具体的には、次のように使用します。\n","\n","---\n","```Python\n","文字列A.split(区切り文字列B)\n","```\n","---\n","\n","リストについては 2-2 で扱います。"]},{"cell_type":"code","metadata":{"id":"nD_OdFIjD-ut","executionInfo":{"status":"ok","timestamp":1601544867310,"user_tz":-540,"elapsed":917,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"31b14c14-d276-4e88-8605-cabdcd9c5ee6","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["fruits1 = 'apple,banana,cherry'\n","fruits1.split(',')"],"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['apple', 'banana', 'cherry']"]},"metadata":{"tags":[]},"execution_count":1}]},{"cell_type":"markdown","metadata":{"id":"cBTgQbIuD-uy"},"source":["### **検索**\n","\n","**`index`** メソッドにより、指定した `部分文字列B` が `文字列A` のどこに存在するか調べることができます。具体的には、次のように使用します。\n","\n","---\n","```Python\n","文字列A.index(部分文字列B)\n","```\n","---\n","\n","ただし、指定した部分文字列が文字列に複数回含まれる場合、最初のインデックスが返されます。また、指定した部分文字列が文字列に含まれない場合は、エラーとなります。"]},{"cell_type":"code","metadata":{"id":"RjQxNYZ1D-uz","executionInfo":{"status":"ok","timestamp":1600853253985,"user_tz":-540,"elapsed":543,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"748de37a-d04a-44f2-9348-8687f6e9438a","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["word1 = 'hello'\n","word1.index('lo')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{"tags":[]},"execution_count":61}]},{"cell_type":"code","metadata":{"id":"HstsHrE0D-u5","executionInfo":{"status":"ok","timestamp":1600853259897,"user_tz":-540,"elapsed":476,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"f4c180e0-d0b3-4517-afd8-eed7a8836434","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["word1.index('l')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{"tags":[]},"execution_count":62}]},{"cell_type":"markdown","metadata":{"id":"4zXRtKEzD-u9"},"source":["以下はエラーとなります。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"pgeo5uMLD-u-","executionInfo":{"status":"error","timestamp":1600853266043,"user_tz":-540,"elapsed":481,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"1035438a-0f4b-4a92-e30e-9e003b695303","colab":{"base_uri":"https://localhost:8080/","height":164}},"source":["word1.index('a')"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-63-f7e472192833>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mword1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'a'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: substring not found"]}]},{"cell_type":"markdown","metadata":{"id":"ByRcumvBD-vA"},"source":["**`find`** メソッドも `index` と同様に部分文字列を検索し、最初に出現するインデックスを返します。\n","\n","`index` との違いは、部分文字列が含まれない場合エラーとはならず `-1` が返されることです。"]},{"cell_type":"code","metadata":{"id":"2FrpDLrqD-vA","executionInfo":{"status":"ok","timestamp":1600853274249,"user_tz":-540,"elapsed":503,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"6e7efd86-52e1-4019-bce5-af6fa1665416","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["word1 = 'hello'\n","word1.find('a')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"markdown","metadata":{"id":"yaUUhKL6D-vC"},"source":["### 練習\n","\n","コロン (`:`) を1つだけ含む文字列 `str1` を引数として与えると、コロンの左右に存在する文字列を入れ替えた文字列を返す関数 `swap_colon(str1)` を作成してください。\n","\n","次のセルの `...` のところを書き換えて `swap_colon(str1)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"8PfNHlAyD-vC","executionInfo":{"status":"ok","timestamp":1600853505204,"user_tz":-540,"elapsed":523,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"82fa2aa5-7eaf-42ba-8b15-51eb7dcd507d","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["def swap_colon(str1):\n","    n = str1.index(':')\n","    str2 = str1[:n]\n","    str3 = str1[n+1:]\n","    return str3 + ':' + str2\n","swap_colon('hello:world')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'world:hello'"]},"metadata":{"tags":[]},"execution_count":69}]},{"cell_type":"markdown","metadata":{"id":"U64cVXtyD-vF"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"ESbvinrsD-vF","executionInfo":{"status":"ok","timestamp":1600853508839,"user_tz":-540,"elapsed":743,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"a7dde87a-ede5-47e7-ad98-a48e29f28951","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["print(swap_colon('hello:world') == 'world:hello')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"WvhsKeyOD-vH"},"source":["### **数え上げ**\n","\n","**`count`** メソッドにより、指定した `部分文字列B` が `文字列A` にいくつ存在するか調べることができます。\n","\n","---\n","```Python\n","文字列A.count(部分文字列B)\n","```\n","---"]},{"cell_type":"code","metadata":{"id":"_aCuJgxtD-vH"},"source":["word1 = 'hello'\n","word1.count('l')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WDFQCohpD-vJ"},"source":["'aaaaaaa'.count('aa')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"K0ux27w_D-vN"},"source":["### 練習\n","\n","ATGCの4種類の文字から成る文字列 `str_atgc` と塩基名（`A`, `T`, `G`, `C` のいずれか）を指定する文字列 `str_bpname` が引数として与えられたとき、`str_atgc` 中に含まれる塩基 `str_bpname` の数を返す関数 `atgc_count` を作成してください。\n","\n","次のセルの `...` のところを書き換えて `atgc_count(str_atgc, str_bpname)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"fmh91BZmD-vN"},"source":["def atgc_count(str_atgc, str_bpname):\n","    return str_atgc.count(str_bpname)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"y4gk12nsD-vP"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"O9UAOx58D-vQ","executionInfo":{"status":"ok","timestamp":1600877359077,"user_tz":-540,"elapsed":949,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"62fe0806-3f59-4f8e-c405-cdc43cfe7864","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["print(atgc_count('AAGCCCCATGGTAA', 'A') == 5)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"H6HWWlxuD-vS"},"source":["### **大文字**・**小文字**\n","**`lower`**, **`capitalize`**, **`upper`** メソッドを用いると、文字列の中の英文字を小文字に変換したり、大文字に変換したりすることができます。\n","\n","これらの操作では、元の文字列は変化しません。"]},{"cell_type":"code","metadata":{"id":"zP66hfHQD-vS","executionInfo":{"status":"ok","timestamp":1600877430962,"user_tz":-540,"elapsed":1580,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"c53cc4b0-4ead-457b-e1fe-708344678641","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["upper_dna = 'DNA'\n","upper_dna.lower() # 全ての文字を小文字にする"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'dna'"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"qG422pdVD-vU","executionInfo":{"status":"ok","timestamp":1600877430964,"user_tz":-540,"elapsed":965,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"538e8500-5b14-49b0-a7d7-f7fa758bc822","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["upper_dna"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'DNA'"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"B3sdFJM7D-vW","executionInfo":{"status":"ok","timestamp":1600877438847,"user_tz":-540,"elapsed":1124,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"3e46a9a0-e33e-4651-a514-5470f3f3ee8d","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["lower_text = 'hello world!'\n","lower_text.capitalize() # 先頭文字を大文字にする"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Hello world!'"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"2g2zWJIaD-vZ","executionInfo":{"status":"ok","timestamp":1600877442222,"user_tz":-540,"elapsed":1788,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"9ddbd777-a26d-4c32-db8b-d4f5a3e7bec9","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["lower_text"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'hello world!'"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"wOKM07Q3D-vc","executionInfo":{"status":"ok","timestamp":1600877448603,"user_tz":-540,"elapsed":1438,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"1875d7ab-a100-4095-9623-39eb6e98e2b5","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["lower_text.upper() #全ての文字を大文字にする"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'HELLO WORLD!'"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"kt9KsBMxD-vg","executionInfo":{"status":"ok","timestamp":1600877448604,"user_tz":-540,"elapsed":373,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"e858e24c-097d-4024-cd84-84e3f370cc8e","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["lower_text"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'hello world!'"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"NdeS-vp7D-vj"},"source":["## **文字列の比較演算**\n","\n","比較演算子、`==`, `<`, `>` などを用いて、2つの文字列を比較することもできます。"]},{"cell_type":"code","metadata":{"id":"SsgcTuE_D-vj","executionInfo":{"status":"ok","timestamp":1600877456165,"user_tz":-540,"elapsed":607,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"16f5e274-1d29-4cd4-ed13-d696f66a14aa","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print('abc' == 'abc')\n","print('ab' == 'abc')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n","False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1ouQWe1vD-vm","executionInfo":{"status":"ok","timestamp":1600877456979,"user_tz":-540,"elapsed":362,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"71138e87-81ee-4e26-fcff-3fe2884ff738","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print('abc' != 'abc')\n","print('ab' != 'abc')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["False\n","True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"aHu3_ck8D-vp"},"source":["文字列の大小の比較は、いわゆる辞書式による比較で、文字列の最初の文字から順に比較して大小を決めます。\n","片方がもう片方を拡張したものであれば、拡張した方を大きいとします。"]},{"cell_type":"code","metadata":{"id":"JvDH6aXmD-vq","executionInfo":{"status":"ok","timestamp":1600877464150,"user_tz":-540,"elapsed":478,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"157fb892-63ff-4990-8736-24de69f580f7","colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["print('abc' <= 'abc')\n","print('abc' < 'abc')\n","print('abc' < 'abd')\n","print('ab' < 'abc')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n","False\n","True\n","True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-zyyToVED-vt"},"source":["## 練習\n","\n","英語の文字列 `str_engsentences` が引数として与えられたとき、それが全て小文字である場合、`True` を返し、そうでない場合、 `False` を返す関数 `check_lower` を作成してください。\n","\n","次のセルの `...` のところを書き換えて `check_lower(str_engsentences)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"D4TZW41MD-vu"},"source":["def check_lower(str_engsentences):\n","    return str_engsentences == str_engsentences.lower()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hA7IRBV_D-vw"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が全て `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"d5WDRubhD-vw","executionInfo":{"status":"ok","timestamp":1600877523934,"user_tz":-540,"elapsed":426,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"fe797afd-ad4e-4f7d-ef6f-ecc07ace70ae","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(check_lower('down down down') == True)\n","print(check_lower('There were doors all round the hall, but they were all locked') == False)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n","True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7P29TF_yD-vz"},"source":["## 初心者によくある誤解 --- **変数**と**文字列**の混乱\n","\n","初心者によくある誤解として、変数と文字列を混乱する例が見られます。たとえば、文字列を引数に取る次のような関数 `func` を考えます（ `func` は引数として与えられた文字列を大文字にして返す関数です）。　"]},{"cell_type":"code","metadata":{"id":"aAKTcuuMD-vz"},"source":["def func(str1):\n","    return str1.upper()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qAr8Z9BtD-v1"},"source":["ここで変数 `str2` を引数として `func` を呼ぶと、`str2` に格納されている文字列が大文字になって返ってきます。"]},{"cell_type":"code","metadata":{"id":"0FfIUpVCD-v2","executionInfo":{"status":"ok","timestamp":1600877539809,"user_tz":-540,"elapsed":657,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"caa10e42-dfde-43cf-d4d8-0ffde646c08d","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["str2 = 'abc'\n","func(str2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'ABC'"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"xzlPChGBD-v5"},"source":["次のように `func` を呼ぶと上とは結果が異なります。次の例では変数 `str2` （に格納されている文字列 `abc`）ではなく、文字列 `'str2'` を引数として `func` を呼び出しています。"]},{"cell_type":"code","metadata":{"id":"LhXlPmLrD-v5","executionInfo":{"status":"ok","timestamp":1600877569196,"user_tz":-540,"elapsed":546,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"63f50ac8-29ca-4045-e926-781fa9fa1794","colab":{"base_uri":"https://localhost:8080/","height":37}},"source":["str2 = 'abc'\n","func('str2')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'STR2'"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"X_BHS82MD-v8"},"source":["## 練習\n","\n","コンマ (`,`) を含む英語の文章からなる文字列 `str_engsentences` が引数として与えられたとき、`str_engsentences` 中の一番最初のコンマより後の文章のみかならなる文字列 `str_res` を返す関数 `remove_clause` を作成してください。ただし、 `str_res` の先頭は大文字のアルファベットとしてください。\n","\n","次のセルの `...` のところを書き換えて `remove_clause(str_engsentences)` を作成してください。"]},{"cell_type":"code","metadata":{"id":"-PA7fk2RD-v9"},"source":["def remove_clause(str_engsentences):\n","    n = str_engsentences.index(',')\n","    str = str_engsentences[n+2:]\n","    return str.capitalize()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5N3iqKJ5D-wA"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"aDw4cflRD-wB","executionInfo":{"status":"ok","timestamp":1600877818961,"user_tz":-540,"elapsed":1327,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"39e3d925-ca17-493c-a5f2-4a1806df5f6e","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["print(remove_clause(\"It's being seen, but you aren't observing.\") == \"But you aren't observing.\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kMXnXQ5fD-wE"},"source":["## 練習の解答"]},{"cell_type":"code","metadata":{"id":"8Qycvh-jD-wE"},"source":["def remove_punctuations(str_engsentences):\n","    str1 = str_engsentences.replace('.', '') # 指定の文字を空文字に置換\n","    str1 = str1.replace(',', '')\n","    str1 = str1.replace(':', '')\n","    str1 = str1.replace(';', '')\n","    str1 = str1.replace('!', '')\n","    str1 = str1.replace('?', '')\n","    return str1\n","#remove_punctuations('Quiet, uh, donations, you want me to make a donation to the coast guard youth auxiliary?')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lBpwtozOD-wH"},"source":["def atgc_bppair(str_atgc):\n","    str_pair = str_atgc.replace('A', 't')# 指定の文字に置換。ただし全て小文字\n","    str_pair = str_pair.replace('T', 'a')\n","    str_pair = str_pair.replace('G', 'c')\n","    str_pair = str_pair.replace('C', 'g')\n","    str_pair = str_pair.upper() # 置換済みの小文字の列を大文字に変換\n","    return str_pair\n","#atgc_bppair('AAGCCCCATGGTAA') "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5pAWajd0D-wJ"},"source":["def swap_colon(str1):\n","    #コロンの位置を取得する # findでもOK\n","    col_index = str1.index(':')\n","    #コロンの位置を基準に前半と後半の部分文字列を取得する\n","    str2, str3 = str1[:col_index], str1[col_index+1:]\n","    #部分文字列の順序を入れ替えて結合する\n","    str4 = str3 + ':' + str2\n","    return str4\n","#swap_colon('hello:world')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gmxQeiKID-wL"},"source":["def atgc_count(str_atgc, str_bpname):\n","    return str_atgc.count(str_bpname)\n","#atgc_count('AAGCCCCATGGTAA', 'A') "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HvtPyr_BD-wO"},"source":["def check_lower(str_engsentences):\n","    if str_engsentences == str_engsentences.lower():#元の文字列と小文字に変換した文字列を比較する\n","        return True\n","    return False\n","#check_lower('down down down')\n","#check_lower('There were doors all round the hall, but they were all locked')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"I-ISzL6oD-wQ"},"source":["def remove_clause(str_engsentences):\n","    int_index = str_engsentences.find(',')\n","    str1 = str_engsentences[int_index+2:]\n","    return str1.capitalize()\n","#remove_clause(\"It's being seen, but you aren't observing.\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7qCK__I7D-wS"},"source":[""],"execution_count":null,"outputs":[]}]}