{"nbformat":4,"nbformat_minor":0,"metadata":{"assignment_id":"2-1","kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"name":"2-1-colab-student.ipynb のコピー","provenance":[{"file_id":"1mTtpBeJhFiyG5QxVAyiy8zjq1OPmF8yy","timestamp":1605715472320}]}},"cells":[{"cell_type":"code","metadata":{"cellView":"form","id":"gdkf8qXgGZCL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605715517482,"user_tz":-540,"elapsed":5624,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"21026118-b29f-4014-dcb2-a9b8965b9d30"},"source":["# NOTE: The authoritative original source of this snippet is in\n","# https://github.com/UTokyo-IPP/utpython/preamble.py.\n","\n","import getpass\n","\n","#@title Submission snippet\n","#@markdown 本ツールはプログラミング授業における本学学生の学習支援のためにGoogle社と連携して開発を進めているものです。アップロードされたコードならびにその自動処理結果は匿名化され、本学教員が管理するサーバで適切に管理されます。個人情報が公にされることは一切ありません。本件について質問や不明点がある場合には、以下にお問い合わせ下さい。数理情報教育研究センター mori atmark mi.u-tokyo.ac.jp<br><br>まず、このノートブックをドライブに保存してください。G Suiteアカウントで[こちらにログイン](https://test-autograder-wi536cjdka-an.a.run.app/login)して認証トークンをコピーしてください。<br>次に、このセルを実行して認証トークンをペーストしてください。認証トークンをペーストしたらEnterを押してください。<br>'Read JWT token'と表示されたら、以下の問題の解答となるコードを入力し、'Submit'のセルを実行してください。コードは自動処理されフィードバックが返ってきます。\n","SERVER_URL = 'https://test-autograder-wi536cjdka-an.a.run.app'\n","JWT_TOKEN = getpass.getpass('認証トークンを入力:')\n","\n","import json\n","import requests\n","\n","from google.colab import _message as google_message\n","from IPython.core import display\n","\n","def Submit(exercise_id=None):\n","  if JWT_TOKEN == \"\":\n","    display.display(display.HTML(\"Googleアカウントでログインして認証トークンをコピーしてください \" +\n","                                 \"<a href='\" + SERVER_URL + \"/login'>ログイン</a>\"))\n","    raise Exception(\"認証トークンを入力してください\")\n","  notebook = google_message.blocking_request(\n","    \"get_ipynb\", request=\"\", timeout_sec=120)[\"ipynb\"]\n","  ids = []\n","  for cell in notebook['cells']:\n","        if 'metadata' not in cell:\n","          continue\n","        m = cell['metadata']\n","        if m and 'exercise_id' in m:\n","            cell_id = m['exercise_id']\n","            if cell_id:\n","                ids.append(cell_id)\n","  params = {}\n","  if exercise_id:\n","    if exercise_id not in ids:\n","        raise Exception('Not valid exercise ID: ' + exercise_id + \". Valid ids: \" + \", \".join(ids))\n","    params[\"exercise_id\"] = exercise_id\n","  data = json.dumps(notebook)\n","  r = requests.post(SERVER_URL + \"/upload\", files={\"notebook\": data},\n","                    headers={\"Authorization\": \"Bearer \" + JWT_TOKEN},\n","                    params=params)\n","  if r.status_code == 401:\n","    display.display(display.HTML(\"Not authorized: is your JWT_TOKEN correct? \" +\n","                                 \"Please get JWT_TOKEN by visiting \" +\n","                                 \"<a target='_blank' href='\" + SERVER_URL + \"/login'>Login page</a>\" +\n","                                 \"in a new browser tab.\"))  \n","  display.display(display.HTML(r.content.decode('utf-8')))\n","  \n","if JWT_TOKEN == \"\":\n","  display.display(display.HTML(\"Googleアカウントでログインして認証トークンをコピーしてください \" +\n","                                 \"<a href='\" + SERVER_URL + \"/login'>ログイン</a>\"))\n","  raise Exception(\"認証トークンを入力してください\")\n","\n","print('Read JWT token.')\n"],"execution_count":1,"outputs":[{"output_type":"stream","text":["認証トークンを入力:··········\n","Read JWT token.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"rOeMp85XGZCL"},"source":["### 練習\n","\n","英語の文章からなる文字列 `str_engsentences` が引数として与えられたとき、`str_engsentences` 中に含まれる全ての句読点（`.`, `,`, `:`, `;`, `!`, `?`）を削除した文字列を返す関数 `remove_punctuations` を作成してください。\n","（練習の解答はこの Jupyter Notebook の一番最後にあります。）\n","\n","次のセルの `...` のところを書き換えて `remove_punctuations(str_engsentences)` を作成してください。\n","\n","\n"]},{"cell_type":"code","metadata":{"exercise_id":"RemovePunctuation","id":"KB5pxt8ZGZCL","executionInfo":{"status":"ok","timestamp":1605715752593,"user_tz":-540,"elapsed":495,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def remove_punctuations(str_engsentences):\n","    str_engsentences = str_engsentences.replace('.','')\n","    str_engsentences = str_engsentences.replace(',','')\n","    str_engsentences = str_engsentences.replace(':','')\n","    str_engsentences = str_engsentences.replace(';','')\n","    str_engsentences = str_engsentences.replace('!','')\n","    str_engsentences = str_engsentences.replace('?','')\n","    return str_engsentences\n","    "],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"NRAa8nZAGZCL","colab":{"base_uri":"https://localhost:8080/","height":260},"executionInfo":{"status":"ok","timestamp":1605715755865,"user_tz":-540,"elapsed":2712,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"176680f3-3f6d-4acd-d68f-63f56a592026"},"source":["# Run this cell to check your solution.\n","Submit(\"RemovePunctuation\")"],"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","<title>Report for 003780bd-7092-4d3e-8d8d-b0b2aa59458b</title>\n","<style type='text/css'>\n","h2 {\n","  color: #697;\n","  font-size: 10pt;\n","  font-family: Verdana, Arial, sans-serif;\n","  margin-top: 2em;\n","}\n",".message {\n","  font-size: 14pt;\n","  font-weight: medium;\n","}\n",".ico {\n","  font-size: 16pt;\n","  font-weight: bold;\n","  padding: 0px 2px 0px 2px;\n","  margin: 10px 4px 1px 4px;\n","  background: #EEE;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".green {\n","  color: #2F2;\n","}\n",".red {\n","  color: #F22;\n","}\n",".code {\n","  white-space: pre;\n","  font-family: monospace;\n","  background: #F0F0F0;\n","  padding: 3pt;\n","  margin: 4pt;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".code ol {\n","  margin: 0px;\n","  padding: 0px;\n","  padding-inline-start: 22pt;\n","  margin-block-start: 0em;\n","  margin-block-end: 0em;\n","  line-height: 10%;\n","}\n",".code ol li {\n","  margin: 0px;\n","  padding: 0px;\n","  line-height: 120%;\n","}\n",".code ol li:nth-child(odd) {\n","  background: #F8F8F8;\n","}\n",".code li:last-child {\n","  margin-bottom: 0px;\n","}\n",".logs {\n","  font-family: monospace;\n","  font-size: 10pt;\n","  background-color: #EEEEEE;\n","  padding: 4px;\n","  border-color: #E0E0E0;\n","  margin: 8px;\n","}\n","\n"," \n","\n"," \n",".pln { color: #000 }   \n","\n","@media screen {\n","  .str { color: #080 }   \n","  .kwd { color: #008 }   \n","  .com { color: #800 }   \n","  .typ { color: #606 }   \n","  .lit { color: #066 }   \n","   \n","  .pun, .opn, .clo { color: #660 }\n","  .tag { color: #008 }   \n","  .atn { color: #606 }   \n","  .atv { color: #080 }   \n","  .dec, .var { color: #606 }   \n","  .fun { color: red }   \n","}\n","\n"," \n","@media print, projection {\n","  .str { color: #060 }\n","  .kwd { color: #006; font-weight: bold }\n","  .com { color: #600; font-style: italic }\n","  .typ { color: #404; font-weight: bold }\n","  .lit { color: #044 }\n","  .pun, .opn, .clo { color: #440 }\n","  .tag { color: #006; font-weight: bold }\n","  .atn { color: #404 }\n","  .atv { color: #060 }\n","}\n","\n"," \n","pre.prettyprint { padding: 2px; border: 1px solid #888 }\n","\n"," \n","ol.linenums { margin-top: 0; margin-bottom: 0 }  \n","li.L0,\n","li.L1,\n","li.L2,\n","li.L3,\n","li.L5,\n","li.L6,\n","li.L7,\n","li.L8 { list-style-type: none }\n"," \n","li.L1,\n","li.L3,\n","li.L5,\n","li.L7,\n","li.L9 { background: #eee }\n","</style>\n","\n","\n","<h2>RemovePunctuation</h2>\n","\n","<div class='code'><ol>\n","<li><span class=\"kwd\">def</span> <span class=\"pln\">remove_punctuations</span><span class=\"pun\">(</span><span class=\"pln\">str_engsentences</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>    <span class=\"pln\">str_engsentences</span> <span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;.&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_engsentences</span> <span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;,&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_engsentences</span> <span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;:&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_engsentences</span> <span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;;&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_engsentences</span> <span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;!&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_engsentences</span> <span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;?&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"kwd\">return</span> <span class=\"pln\">str_engsentences</span></li>\n","<li>    </li>\n","</ol></div>\n","\n","<span class='ico green'>&check;</span><span class='message'>Looks OK.</span>\n","\n","\n","\n","\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"kbmTxVNaGZCM"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"id":"i2XipX0oGZCM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605715766312,"user_tz":-540,"elapsed":1120,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"73f7403c-18a7-459b-8b94-d14a17a8d186"},"source":["print(remove_punctuations('Quiet, uh, donations, you want me to make a donation to the coast guard youth auxiliary?') == 'Quiet uh donations you want me to make a donation to the coast guard youth auxiliary')"],"execution_count":4,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"FouBmmyWGZCM"},"source":["### 練習\n","\n","ATGCの4種類の文字から成る文字列 `str_atgc` が引数として与えられたとき、文字列 `str_pair` を返す関数 `atgc_bppair` を作成してください。ただし、`str_pair` は、`str_atgc` 中の各文字列に対して、\n","`A` を `T` に、`T` を `A` に、`G` を `C` に、`C` を `G` に置き換えたものです。\n","\n","次のセルの `...` のところを書き換えて `atgc_bppair(str_atgc)` を作成してください。\n","\n"]},{"cell_type":"code","metadata":{"exercise_id":"AtgcPair","id":"5cZuW7F6GZCM","executionInfo":{"status":"ok","timestamp":1605716411300,"user_tz":-540,"elapsed":1153,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def atgc_bppair(str_atgc):\n","    str_atgc = str_atgc.replace('A','t')\n","    str_atgc = str_atgc.replace('T','a')\n","    str_atgc = str_atgc.replace('G','c')\n","    str_atgc = str_atgc.replace('C','g')\n","    str_atgc = str_atgc.upper()\n","    return str_atgc\n"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZwsGEADfGZCM","colab":{"base_uri":"https://localhost:8080/","height":243},"executionInfo":{"status":"ok","timestamp":1605716414688,"user_tz":-540,"elapsed":2862,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"bf76d1d7-dd4c-4039-b112-ffa421d46296"},"source":["# Run this cell to check your solution.\n","Submit(\"AtgcPair\")"],"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","<title>Report for 11ff118f-12cd-4a18-b94b-919cb5c5a2bf</title>\n","<style type='text/css'>\n","h2 {\n","  color: #697;\n","  font-size: 10pt;\n","  font-family: Verdana, Arial, sans-serif;\n","  margin-top: 2em;\n","}\n",".message {\n","  font-size: 14pt;\n","  font-weight: medium;\n","}\n",".ico {\n","  font-size: 16pt;\n","  font-weight: bold;\n","  padding: 0px 2px 0px 2px;\n","  margin: 10px 4px 1px 4px;\n","  background: #EEE;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".green {\n","  color: #2F2;\n","}\n",".red {\n","  color: #F22;\n","}\n",".code {\n","  white-space: pre;\n","  font-family: monospace;\n","  background: #F0F0F0;\n","  padding: 3pt;\n","  margin: 4pt;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".code ol {\n","  margin: 0px;\n","  padding: 0px;\n","  padding-inline-start: 22pt;\n","  margin-block-start: 0em;\n","  margin-block-end: 0em;\n","  line-height: 10%;\n","}\n",".code ol li {\n","  margin: 0px;\n","  padding: 0px;\n","  line-height: 120%;\n","}\n",".code ol li:nth-child(odd) {\n","  background: #F8F8F8;\n","}\n",".code li:last-child {\n","  margin-bottom: 0px;\n","}\n",".logs {\n","  font-family: monospace;\n","  font-size: 10pt;\n","  background-color: #EEEEEE;\n","  padding: 4px;\n","  border-color: #E0E0E0;\n","  margin: 8px;\n","}\n","\n"," \n","\n"," \n",".pln { color: #000 }   \n","\n","@media screen {\n","  .str { color: #080 }   \n","  .kwd { color: #008 }   \n","  .com { color: #800 }   \n","  .typ { color: #606 }   \n","  .lit { color: #066 }   \n","   \n","  .pun, .opn, .clo { color: #660 }\n","  .tag { color: #008 }   \n","  .atn { color: #606 }   \n","  .atv { color: #080 }   \n","  .dec, .var { color: #606 }   \n","  .fun { color: red }   \n","}\n","\n"," \n","@media print, projection {\n","  .str { color: #060 }\n","  .kwd { color: #006; font-weight: bold }\n","  .com { color: #600; font-style: italic }\n","  .typ { color: #404; font-weight: bold }\n","  .lit { color: #044 }\n","  .pun, .opn, .clo { color: #440 }\n","  .tag { color: #006; font-weight: bold }\n","  .atn { color: #404 }\n","  .atv { color: #060 }\n","}\n","\n"," \n","pre.prettyprint { padding: 2px; border: 1px solid #888 }\n","\n"," \n","ol.linenums { margin-top: 0; margin-bottom: 0 }  \n","li.L0,\n","li.L1,\n","li.L2,\n","li.L3,\n","li.L5,\n","li.L6,\n","li.L7,\n","li.L8 { list-style-type: none }\n"," \n","li.L1,\n","li.L3,\n","li.L5,\n","li.L7,\n","li.L9 { background: #eee }\n","</style>\n","\n","\n","<h2>AtgcPair</h2>\n","\n","<div class='code'><ol>\n","<li><span class=\"kwd\">def</span> <span class=\"pln\">atgc_bppair</span><span class=\"pun\">(</span><span class=\"pln\">str_atgc</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>    <span class=\"pln\">str_atgc</span> <span class=\"pun\">=</span> <span class=\"pln\">str_atgc</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;A&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;t&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_atgc</span> <span class=\"pun\">=</span> <span class=\"pln\">str_atgc</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;T&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;a&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_atgc</span> <span class=\"pun\">=</span> <span class=\"pln\">str_atgc</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;G&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;c&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_atgc</span> <span class=\"pun\">=</span> <span class=\"pln\">str_atgc</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">&#39;C&#39;</span><span class=\"pun\">,</span><span class=\"str\">&#39;g&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"pln\">str_atgc</span> <span class=\"pun\">=</span> <span class=\"pln\">str_atgc</span><span class=\"pun\">.</span><span class=\"pln\">upper</span><span class=\"pun\">(</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"kwd\">return</span> <span class=\"pln\">str_atgc</span></li>\n","<li></li>\n","</ol></div>\n","\n","<span class='ico green'>&check;</span><span class='message'>Looks OK.</span>\n","\n","\n","\n","\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"4BeSlOTDGZCM"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"id":"5mx2tbauGZCM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605716417146,"user_tz":-540,"elapsed":1069,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"6739b2f7-cdb1-4a75-dd71-541999c6609b"},"source":["print(atgc_bppair('AAGCCCCATGGTAA') == 'TTCGGGGTACCATT')"],"execution_count":7,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_YmIoPYeGZCM"},"source":["### 練習\n","\n","コロン (`:`) を1つだけ含む文字列 `str1` を引数として与えると、コロンの左右に存在する文字列を入れ替えた文字列を返す関数 `swap_colon(str1)` を作成してください。\n","\n","次のセルの `...` のところを書き換えて `swap_colon(str1)` を作成してください。\n","\n"]},{"cell_type":"code","metadata":{"exercise_id":"SwapColon","id":"6ZvmVsLSGZCM","executionInfo":{"status":"ok","timestamp":1605716658338,"user_tz":-540,"elapsed":880,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def swap_colon(str1):\n","    i = str1.index(':')\n","    return str1[i+1:] + ':' + str1[:i]"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"zBF5JFiNGZCM","colab":{"base_uri":"https://localhost:8080/","height":158},"executionInfo":{"status":"ok","timestamp":1605716660411,"user_tz":-540,"elapsed":2938,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"28656a77-13ea-4b5f-cdf4-aafd951411b3"},"source":["# Run this cell to check your solution.\n","Submit(\"SwapColon\")"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","<title>Report for 6f09096e-8187-4a1d-9612-b38df2cacebf</title>\n","<style type='text/css'>\n","h2 {\n","  color: #697;\n","  font-size: 10pt;\n","  font-family: Verdana, Arial, sans-serif;\n","  margin-top: 2em;\n","}\n",".message {\n","  font-size: 14pt;\n","  font-weight: medium;\n","}\n",".ico {\n","  font-size: 16pt;\n","  font-weight: bold;\n","  padding: 0px 2px 0px 2px;\n","  margin: 10px 4px 1px 4px;\n","  background: #EEE;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".green {\n","  color: #2F2;\n","}\n",".red {\n","  color: #F22;\n","}\n",".code {\n","  white-space: pre;\n","  font-family: monospace;\n","  background: #F0F0F0;\n","  padding: 3pt;\n","  margin: 4pt;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".code ol {\n","  margin: 0px;\n","  padding: 0px;\n","  padding-inline-start: 22pt;\n","  margin-block-start: 0em;\n","  margin-block-end: 0em;\n","  line-height: 10%;\n","}\n",".code ol li {\n","  margin: 0px;\n","  padding: 0px;\n","  line-height: 120%;\n","}\n",".code ol li:nth-child(odd) {\n","  background: #F8F8F8;\n","}\n",".code li:last-child {\n","  margin-bottom: 0px;\n","}\n",".logs {\n","  font-family: monospace;\n","  font-size: 10pt;\n","  background-color: #EEEEEE;\n","  padding: 4px;\n","  border-color: #E0E0E0;\n","  margin: 8px;\n","}\n","\n"," \n","\n"," \n",".pln { color: #000 }   \n","\n","@media screen {\n","  .str { color: #080 }   \n","  .kwd { color: #008 }   \n","  .com { color: #800 }   \n","  .typ { color: #606 }   \n","  .lit { color: #066 }   \n","   \n","  .pun, .opn, .clo { color: #660 }\n","  .tag { color: #008 }   \n","  .atn { color: #606 }   \n","  .atv { color: #080 }   \n","  .dec, .var { color: #606 }   \n","  .fun { color: red }   \n","}\n","\n"," \n","@media print, projection {\n","  .str { color: #060 }\n","  .kwd { color: #006; font-weight: bold }\n","  .com { color: #600; font-style: italic }\n","  .typ { color: #404; font-weight: bold }\n","  .lit { color: #044 }\n","  .pun, .opn, .clo { color: #440 }\n","  .tag { color: #006; font-weight: bold }\n","  .atn { color: #404 }\n","  .atv { color: #060 }\n","}\n","\n"," \n","pre.prettyprint { padding: 2px; border: 1px solid #888 }\n","\n"," \n","ol.linenums { margin-top: 0; margin-bottom: 0 }  \n","li.L0,\n","li.L1,\n","li.L2,\n","li.L3,\n","li.L5,\n","li.L6,\n","li.L7,\n","li.L8 { list-style-type: none }\n"," \n","li.L1,\n","li.L3,\n","li.L5,\n","li.L7,\n","li.L9 { background: #eee }\n","</style>\n","\n","\n","<h2>SwapColon</h2>\n","\n","<div class='code'><ol>\n","<li><span class=\"kwd\">def</span> <span class=\"pln\">swap_colon</span><span class=\"pun\">(</span><span class=\"pln\">str1</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>    <span class=\"pln\">i</span> <span class=\"pun\">=</span> <span class=\"pln\">str1</span><span class=\"pun\">.</span><span class=\"pln\">index</span><span class=\"pun\">(</span><span class=\"str\">&#39;:&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"kwd\">return</span> <span class=\"pln\">str1</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"dec\">1</span><span class=\"pun\">:</span><span class=\"pun\">]</span> <span class=\"pun\">+</span> <span class=\"str\">&#39;:&#39;</span> <span class=\"pun\">+</span> <span class=\"pln\">str1</span><span class=\"pun\">[</span><span class=\"pun\">:</span><span class=\"pln\">i</span><span class=\"pun\">]</span></li>\n","</ol></div>\n","\n","<span class='ico green'>&check;</span><span class='message'>Looks OK.</span>\n","\n","\n","\n","\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"tzdUz_uVGZCM"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"id":"Jg6knCDJGZCM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605716663220,"user_tz":-540,"elapsed":1224,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"5fbfdce4-45c1-440f-861d-ea3adba628d1"},"source":["print(swap_colon('hello:world') == 'world:hello')"],"execution_count":17,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"SwHhXQA9GZCN"},"source":["### 練習\n","\n","ATGCの4種類の文字から成る文字列 `str_atgc` と塩基名（`A`, `T`, `G`, `C` のいずれか）を指定する文字列 `str_bpname` が引数として与えられたとき、`str_atgc` 中に含まれる塩基 `str_bpname` の数を返す関数 `atgc_count` を作成してください。\n","\n","次のセルの `...` のところを書き換えて `atgc_count(str_atgc, str_bpname)` を作成してください。\n","\n"]},{"cell_type":"code","metadata":{"exercise_id":"AtgcCount","id":"y4AZD0qmGZCN","executionInfo":{"status":"ok","timestamp":1605720100068,"user_tz":-540,"elapsed":964,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def atgc_count(str_atgc, str_bpname):\n","    c = 0\n","    for i in range(len(str_atgc)-len(str_bpname)+1):\n","      if str_atgc[i:i+len(str_bpname)] == str_bpname:\n","        c += 1\n","    return c\n"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"OEOkO5EjGZCN","colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"status":"ok","timestamp":1605720103270,"user_tz":-540,"elapsed":2828,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"421cd970-cef9-470f-add0-3314d52deba2"},"source":["# Run this cell to check your solution.\n","Submit(\"AtgcCount\")"],"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","<title>Report for f813f142-4364-44cd-b3e9-722b42e3b1ce</title>\n","<style type='text/css'>\n","h2 {\n","  color: #697;\n","  font-size: 10pt;\n","  font-family: Verdana, Arial, sans-serif;\n","  margin-top: 2em;\n","}\n",".message {\n","  font-size: 14pt;\n","  font-weight: medium;\n","}\n",".ico {\n","  font-size: 16pt;\n","  font-weight: bold;\n","  padding: 0px 2px 0px 2px;\n","  margin: 10px 4px 1px 4px;\n","  background: #EEE;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".green {\n","  color: #2F2;\n","}\n",".red {\n","  color: #F22;\n","}\n",".code {\n","  white-space: pre;\n","  font-family: monospace;\n","  background: #F0F0F0;\n","  padding: 3pt;\n","  margin: 4pt;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".code ol {\n","  margin: 0px;\n","  padding: 0px;\n","  padding-inline-start: 22pt;\n","  margin-block-start: 0em;\n","  margin-block-end: 0em;\n","  line-height: 10%;\n","}\n",".code ol li {\n","  margin: 0px;\n","  padding: 0px;\n","  line-height: 120%;\n","}\n",".code ol li:nth-child(odd) {\n","  background: #F8F8F8;\n","}\n",".code li:last-child {\n","  margin-bottom: 0px;\n","}\n",".logs {\n","  font-family: monospace;\n","  font-size: 10pt;\n","  background-color: #EEEEEE;\n","  padding: 4px;\n","  border-color: #E0E0E0;\n","  margin: 8px;\n","}\n","\n"," \n","\n"," \n",".pln { color: #000 }   \n","\n","@media screen {\n","  .str { color: #080 }   \n","  .kwd { color: #008 }   \n","  .com { color: #800 }   \n","  .typ { color: #606 }   \n","  .lit { color: #066 }   \n","   \n","  .pun, .opn, .clo { color: #660 }\n","  .tag { color: #008 }   \n","  .atn { color: #606 }   \n","  .atv { color: #080 }   \n","  .dec, .var { color: #606 }   \n","  .fun { color: red }   \n","}\n","\n"," \n","@media print, projection {\n","  .str { color: #060 }\n","  .kwd { color: #006; font-weight: bold }\n","  .com { color: #600; font-style: italic }\n","  .typ { color: #404; font-weight: bold }\n","  .lit { color: #044 }\n","  .pun, .opn, .clo { color: #440 }\n","  .tag { color: #006; font-weight: bold }\n","  .atn { color: #404 }\n","  .atv { color: #060 }\n","}\n","\n"," \n","pre.prettyprint { padding: 2px; border: 1px solid #888 }\n","\n"," \n","ol.linenums { margin-top: 0; margin-bottom: 0 }  \n","li.L0,\n","li.L1,\n","li.L2,\n","li.L3,\n","li.L5,\n","li.L6,\n","li.L7,\n","li.L8 { list-style-type: none }\n"," \n","li.L1,\n","li.L3,\n","li.L5,\n","li.L7,\n","li.L9 { background: #eee }\n","</style>\n","\n","\n","<h2>AtgcCount</h2>\n","\n","<div class='code'><ol>\n","<li><span class=\"kwd\">def</span> <span class=\"pln\">atgc_count</span><span class=\"pun\">(</span><span class=\"pln\">str_atgc</span><span class=\"pun\">,</span> <span class=\"pln\">str_bpname</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>    <span class=\"pln\">c</span> <span class=\"pun\">=</span> <span class=\"dec\">0</span></li>\n","<li>    <span class=\"kwd\">for</span> <span class=\"pln\">i</span> <span class=\"kwd\">in</span> <span class=\"pln\">range</span><span class=\"pun\">(</span><span class=\"pln\">len</span><span class=\"pun\">(</span><span class=\"pln\">str_atgc</span><span class=\"pun\">)</span><span class=\"pun\">-</span><span class=\"pln\">len</span><span class=\"pun\">(</span><span class=\"pln\">str_bpname</span><span class=\"pun\">)</span><span class=\"pun\">+</span><span class=\"dec\">1</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>      <span class=\"kwd\">if</span> <span class=\"pln\">str_atgc</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">:</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"pln\">len</span><span class=\"pun\">(</span><span class=\"pln\">str_bpname</span><span class=\"pun\">)</span><span class=\"pun\">]</span> <span class=\"pun\">=</span><span class=\"pun\">=</span> <span class=\"pln\">str_bpname</span><span class=\"pun\">:</span></li>\n","<li>        <span class=\"pln\">c</span> <span class=\"pun\">+</span><span class=\"pun\">=</span> <span class=\"dec\">1</span></li>\n","<li>    <span class=\"kwd\">return</span> <span class=\"pln\">c</span></li>\n","<li></li>\n","</ol></div>\n","\n","<span class='ico green'>&check;</span><span class='message'>Looks OK.</span>\n","\n","\n","\n","\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"wT4qkYUmGZCN"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"id":"nTHw1rJZGZCN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605720105707,"user_tz":-540,"elapsed":870,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"5e153bfc-2907-492f-83dc-e74f65c00ce8"},"source":["print(atgc_count('AAGCCCCATGGTAA', 'A') == 5)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"GylyMxkhGZCN"},"source":["## 練習\n","\n","英語の文字列 `str_engsentences` が引数として与えられたとき、それが全て小文字である場合、`True` を返し、そうでない場合、 `False` を返す関数 `check_lower` を作成してください。\n","\n","次のセルの `...` のところを書き換えて `check_lower(str_engsentences)` を作成してください。\n","\n"]},{"cell_type":"code","metadata":{"exercise_id":"CheckLower","id":"TOBt0rhVGZCN","executionInfo":{"status":"ok","timestamp":1605720163401,"user_tz":-540,"elapsed":891,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def check_lower(str_engsentences):\n","    if str_engsentences == str_engsentences.lower():\n","      return True\n","    else:\n","      return False"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"vLEbZTUbGZCN","colab":{"base_uri":"https://localhost:8080/","height":192},"executionInfo":{"status":"ok","timestamp":1605720166356,"user_tz":-540,"elapsed":2593,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"9507f30c-17c8-4685-befa-1f5f14f34e29"},"source":["# Run this cell to check your solution.\n","Submit(\"CheckLower\")"],"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","<title>Report for a1b987e0-d248-4faa-8f61-6e6908d677da</title>\n","<style type='text/css'>\n","h2 {\n","  color: #697;\n","  font-size: 10pt;\n","  font-family: Verdana, Arial, sans-serif;\n","  margin-top: 2em;\n","}\n",".message {\n","  font-size: 14pt;\n","  font-weight: medium;\n","}\n",".ico {\n","  font-size: 16pt;\n","  font-weight: bold;\n","  padding: 0px 2px 0px 2px;\n","  margin: 10px 4px 1px 4px;\n","  background: #EEE;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".green {\n","  color: #2F2;\n","}\n",".red {\n","  color: #F22;\n","}\n",".code {\n","  white-space: pre;\n","  font-family: monospace;\n","  background: #F0F0F0;\n","  padding: 3pt;\n","  margin: 4pt;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".code ol {\n","  margin: 0px;\n","  padding: 0px;\n","  padding-inline-start: 22pt;\n","  margin-block-start: 0em;\n","  margin-block-end: 0em;\n","  line-height: 10%;\n","}\n",".code ol li {\n","  margin: 0px;\n","  padding: 0px;\n","  line-height: 120%;\n","}\n",".code ol li:nth-child(odd) {\n","  background: #F8F8F8;\n","}\n",".code li:last-child {\n","  margin-bottom: 0px;\n","}\n",".logs {\n","  font-family: monospace;\n","  font-size: 10pt;\n","  background-color: #EEEEEE;\n","  padding: 4px;\n","  border-color: #E0E0E0;\n","  margin: 8px;\n","}\n","\n"," \n","\n"," \n",".pln { color: #000 }   \n","\n","@media screen {\n","  .str { color: #080 }   \n","  .kwd { color: #008 }   \n","  .com { color: #800 }   \n","  .typ { color: #606 }   \n","  .lit { color: #066 }   \n","   \n","  .pun, .opn, .clo { color: #660 }\n","  .tag { color: #008 }   \n","  .atn { color: #606 }   \n","  .atv { color: #080 }   \n","  .dec, .var { color: #606 }   \n","  .fun { color: red }   \n","}\n","\n"," \n","@media print, projection {\n","  .str { color: #060 }\n","  .kwd { color: #006; font-weight: bold }\n","  .com { color: #600; font-style: italic }\n","  .typ { color: #404; font-weight: bold }\n","  .lit { color: #044 }\n","  .pun, .opn, .clo { color: #440 }\n","  .tag { color: #006; font-weight: bold }\n","  .atn { color: #404 }\n","  .atv { color: #060 }\n","}\n","\n"," \n","pre.prettyprint { padding: 2px; border: 1px solid #888 }\n","\n"," \n","ol.linenums { margin-top: 0; margin-bottom: 0 }  \n","li.L0,\n","li.L1,\n","li.L2,\n","li.L3,\n","li.L5,\n","li.L6,\n","li.L7,\n","li.L8 { list-style-type: none }\n"," \n","li.L1,\n","li.L3,\n","li.L5,\n","li.L7,\n","li.L9 { background: #eee }\n","</style>\n","\n","\n","<h2>CheckLower</h2>\n","\n","<div class='code'><ol>\n","<li><span class=\"kwd\">def</span> <span class=\"pln\">check_lower</span><span class=\"pun\">(</span><span class=\"pln\">str_engsentences</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>    <span class=\"kwd\">if</span> <span class=\"pln\">str_engsentences</span> <span class=\"pun\">=</span><span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">lower</span><span class=\"pun\">(</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>      <span class=\"kwd\">return</span> <span class=\"kwd\">True</span></li>\n","<li>    <span class=\"kwd\">else</span><span class=\"pun\">:</span></li>\n","<li>      <span class=\"kwd\">return</span> <span class=\"kwd\">False</span></li>\n","</ol></div>\n","\n","<span class='ico green'>&check;</span><span class='message'>Looks OK.</span>\n","\n","\n","\n","\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"3TJgiNDbGZCN"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が全て `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"id":"aJIllSYtGZCN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605720169142,"user_tz":-540,"elapsed":1135,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"13178aee-cee3-496c-a103-c4638b6aa60b"},"source":["print(check_lower('down down down') == True)\n","print(check_lower('There were doors all round the hall, but they were all locked') == False)"],"execution_count":25,"outputs":[{"output_type":"stream","text":["True\n","True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UetLTq3OGZCN"},"source":["## 練習\n","\n","コンマ (`,`) を含む英語の文章からなる文字列 `str_engsentences` が引数として与えられたとき、`str_engsentences` 中の一番最初のコンマより後の文章のみかならなる文字列 `str_res` を返す関数 `remove_clause` を作成してください。ただし、 `str_res` の先頭は大文字のアルファベットとしてください。\n","\n","次のセルの `...` のところを書き換えて `remove_clause(str_engsentences)` を作成してください。\n","\n"]},{"cell_type":"code","metadata":{"exercise_id":"RemoveClause","id":"hWnIZpTqGZCN","executionInfo":{"status":"ok","timestamp":1605720907055,"user_tz":-540,"elapsed":912,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def remove_clause(str_engsentences):\n","    i = str_engsentences.index(',')\n","    return str_engsentences[i+2:].capitalize()"],"execution_count":41,"outputs":[]},{"cell_type":"code","metadata":{"id":"FSqO-zLgGZCN","colab":{"base_uri":"https://localhost:8080/","height":158},"executionInfo":{"status":"ok","timestamp":1605720909990,"user_tz":-540,"elapsed":2542,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"57c6f550-b010-469b-9038-3339b26945ce"},"source":["# Run this cell to check your solution.\n","Submit(\"RemoveClause\")"],"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","<title>Report for f71af394-51f0-4fb0-90cb-ca0e1ab22eb8</title>\n","<style type='text/css'>\n","h2 {\n","  color: #697;\n","  font-size: 10pt;\n","  font-family: Verdana, Arial, sans-serif;\n","  margin-top: 2em;\n","}\n",".message {\n","  font-size: 14pt;\n","  font-weight: medium;\n","}\n",".ico {\n","  font-size: 16pt;\n","  font-weight: bold;\n","  padding: 0px 2px 0px 2px;\n","  margin: 10px 4px 1px 4px;\n","  background: #EEE;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".green {\n","  color: #2F2;\n","}\n",".red {\n","  color: #F22;\n","}\n",".code {\n","  white-space: pre;\n","  font-family: monospace;\n","  background: #F0F0F0;\n","  padding: 3pt;\n","  margin: 4pt;\n","  border: 1pt solid #DDD;\n","  border-radius: 3pt;\n","}\n",".code ol {\n","  margin: 0px;\n","  padding: 0px;\n","  padding-inline-start: 22pt;\n","  margin-block-start: 0em;\n","  margin-block-end: 0em;\n","  line-height: 10%;\n","}\n",".code ol li {\n","  margin: 0px;\n","  padding: 0px;\n","  line-height: 120%;\n","}\n",".code ol li:nth-child(odd) {\n","  background: #F8F8F8;\n","}\n",".code li:last-child {\n","  margin-bottom: 0px;\n","}\n",".logs {\n","  font-family: monospace;\n","  font-size: 10pt;\n","  background-color: #EEEEEE;\n","  padding: 4px;\n","  border-color: #E0E0E0;\n","  margin: 8px;\n","}\n","\n"," \n","\n"," \n",".pln { color: #000 }   \n","\n","@media screen {\n","  .str { color: #080 }   \n","  .kwd { color: #008 }   \n","  .com { color: #800 }   \n","  .typ { color: #606 }   \n","  .lit { color: #066 }   \n","   \n","  .pun, .opn, .clo { color: #660 }\n","  .tag { color: #008 }   \n","  .atn { color: #606 }   \n","  .atv { color: #080 }   \n","  .dec, .var { color: #606 }   \n","  .fun { color: red }   \n","}\n","\n"," \n","@media print, projection {\n","  .str { color: #060 }\n","  .kwd { color: #006; font-weight: bold }\n","  .com { color: #600; font-style: italic }\n","  .typ { color: #404; font-weight: bold }\n","  .lit { color: #044 }\n","  .pun, .opn, .clo { color: #440 }\n","  .tag { color: #006; font-weight: bold }\n","  .atn { color: #404 }\n","  .atv { color: #060 }\n","}\n","\n"," \n","pre.prettyprint { padding: 2px; border: 1px solid #888 }\n","\n"," \n","ol.linenums { margin-top: 0; margin-bottom: 0 }  \n","li.L0,\n","li.L1,\n","li.L2,\n","li.L3,\n","li.L5,\n","li.L6,\n","li.L7,\n","li.L8 { list-style-type: none }\n"," \n","li.L1,\n","li.L3,\n","li.L5,\n","li.L7,\n","li.L9 { background: #eee }\n","</style>\n","\n","\n","<h2>RemoveClause</h2>\n","\n","<div class='code'><ol>\n","<li><span class=\"kwd\">def</span> <span class=\"pln\">remove_clause</span><span class=\"pun\">(</span><span class=\"pln\">str_engsentences</span><span class=\"pun\">)</span><span class=\"pun\">:</span></li>\n","<li>    <span class=\"pln\">i</span> <span class=\"pun\">=</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">.</span><span class=\"pln\">index</span><span class=\"pun\">(</span><span class=\"str\">&#39;,&#39;</span><span class=\"pun\">)</span></li>\n","<li>    <span class=\"kwd\">return</span> <span class=\"pln\">str_engsentences</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"dec\">2</span><span class=\"pun\">:</span><span class=\"pun\">]</span><span class=\"pun\">.</span><span class=\"pln\">capitalize</span><span class=\"pun\">(</span><span class=\"pun\">)</span></li>\n","</ol></div>\n","\n","<span class='ico green'>&check;</span><span class='message'>Looks OK.</span>\n","\n","\n","\n","\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"Xw4uQaeLGZCN"},"source":["上のセルで解答を作成した後、以下のセルを実行し、実行結果が `True` になることを確認してください。"]},{"cell_type":"code","metadata":{"id":"NzZlmP51GZCN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605720911885,"user_tz":-540,"elapsed":962,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"5c32d7d8-e6b2-4920-8064-27ec941d6bc0"},"source":["print(remove_clause(\"It's being seen, but you aren't observing.\") == \"But you aren't observing.\")"],"execution_count":43,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"RC7fPk36GZCN"},"source":["## 練習の解答"]},{"cell_type":"code","metadata":{"id":"5j4xgqvxGZCN","executionInfo":{"status":"ok","timestamp":1605720924725,"user_tz":-540,"elapsed":1158,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def remove_punctuations(str_engsentences):\n","    str1 = str_engsentences.replace('.', '') # 指定の文字を空文字に置換\n","    str1 = str1.replace(',', '')\n","    str1 = str1.replace(':', '')\n","    str1 = str1.replace(';', '')\n","    str1 = str1.replace('!', '')\n","    str1 = str1.replace('?', '')\n","    return str1\n","#remove_punctuations('Quiet, uh, donations, you want me to make a donation to the coast guard youth auxiliary?')"],"execution_count":44,"outputs":[]},{"cell_type":"code","metadata":{"id":"i7FW9T6nGZCN","executionInfo":{"status":"ok","timestamp":1605720927660,"user_tz":-540,"elapsed":877,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def atgc_bppair(str_atgc):\n","    str_pair = str_atgc.replace('A', 't')# 指定の文字に置換。ただし全て小文字\n","    str_pair = str_pair.replace('T', 'a')\n","    str_pair = str_pair.replace('G', 'c')\n","    str_pair = str_pair.replace('C', 'g')\n","    str_pair = str_pair.upper() # 置換済みの小文字の列を大文字に変換\n","    return str_pair\n","#atgc_bppair('AAGCCCCATGGTAA') "],"execution_count":45,"outputs":[]},{"cell_type":"code","metadata":{"id":"J2zXAuHqGZCN","executionInfo":{"status":"ok","timestamp":1605720930051,"user_tz":-540,"elapsed":822,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def swap_colon(str1):\n","    #コロンの位置を取得する # findでもOK\n","    col_index = str1.index(':')\n","    #コロンの位置を基準に前半と後半の部分文字列を取得する\n","    str2, str3 = str1[:col_index], str1[col_index+1:]\n","    #部分文字列の順序を入れ替えて結合する\n","    str4 = str3 + ':' + str2\n","    return str4\n","#swap_colon('hello:world')"],"execution_count":46,"outputs":[]},{"cell_type":"code","metadata":{"id":"EVn_lFmWGZCO","executionInfo":{"status":"ok","timestamp":1605720937519,"user_tz":-540,"elapsed":830,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def atgc_count(str_atgc, str_bpname):\n","    return str_atgc.count(str_bpname)\n","#atgc_count('AAGCCCCATGGTAA', 'A') "],"execution_count":47,"outputs":[]},{"cell_type":"code","metadata":{"id":"XQW4tJthGZCO"},"source":["def check_lower(str_engsentences):\n","    if str_engsentences == str_engsentences.lower():#元の文字列と小文字に変換した文字列を比較する\n","        return True\n","    return False\n","#check_lower('down down down')\n","#check_lower('There were doors all round the hall, but they were all locked')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MAoPO0DiGZCO"},"source":["def remove_clause(str_engsentences):\n","    int_index = str_engsentences.find(',')\n","    str1 = str_engsentences[int_index+2:]\n","    return str1.capitalize()\n","#remove_clause(\"It's being seen, but you aren't observing.\")"],"execution_count":null,"outputs":[]}]}