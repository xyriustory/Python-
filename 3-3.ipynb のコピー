{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"},"colab":{"name":"3-3.ipynb のコピー","provenance":[{"file_id":"https://github.com/UTokyo-IPP/utpython/blob/master/3/3-3.ipynb","timestamp":1601084031234}]}},"cells":[{"cell_type":"markdown","metadata":{"nbpresent":{"id":"9b44097d-e842-46c4-962d-d2a6ebb48589"},"id":"-f9yn8JWtnEi"},"source":["# 3-3. 関数\n","\n","関数について改めて説明します。\n","\n","参考:\n","\n","- https://docs.python.org/ja/3/tutorial/controlflow.html#defining-functions"]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"3a9dfa48-61d0-448a-80ef-f6caca60ff2f"},"id":"-nB0UT16tnEm"},"source":["## 関数の定義\n","**関数**は処理（手続きの流れ）をまとめた再利用可能なコードです。関数には以下の特徴があります。\n","\n","* 名前を持つ。\n","* 手続きの流れを含む。\n","* 返値（明示的あるいは非明示的に）を返す。\n","\n","`len()` や `sum()` などの[組み込み関数](https://docs.python.jp/3/library/functions.html)は関数の例です。\n","\n","まず、関数の定義をしてみましょう。関数を定義するには **`def`** を用います。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"93578bcf-2a64-464f-a366-0669076c1da9"},"id":"Ym6wz2bYtnEv"},"source":["#'Hello'を表示する関数greeting\n","def greeting():\n","    print('Hello')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"ae0cc73e-14d9-4499-ac99-fa23f727c542"},"id":"L3T1JkPutnFA"},"source":["関数を定義したら、それを呼び出すことができます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"7fff34d3-afef-4488-81d1-09afea2fc12e"},"id":"VJ54JIREtnFD"},"source":["#関数greetingを呼び出し\n","greeting()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"91f96d00-b9cf-4122-a243-0b1aecbd8c67"},"id":"P32uB-sXtnFP"},"source":["**関数定義**の一般形は以下の通りです。\n","\n","```Python\n","def 関数名(引数):\n","    関数本体\n","```\n","\n","1行名はヘッダと呼ばれ、***関数名***はその関数を呼ぶのに使う名前、**引数**はその関数へ渡す変数の一覧です。\n","変数がない場合もあります。\n","\n","***関数本体***はインデントした上で、処理や手続きの流れを記述します。"]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"d8968821-8915-4043-b5e7-2be1d7d1309c"},"id":"QSXKD3lztnFS"},"source":["## 引数\n","関数を定義する際に、ヘッダの括弧の中に関数へ渡す変数の一覧を記述します。\n","これらの変数は関数の**ローカル変数**となります。\n","ローカル変数とはプログラムの一部（ここでは関数内）でのみ利用可能な変数です。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"e03e8aa1-af37-4111-9998-028d8c257e72"},"id":"v87QuKITtnFU"},"source":["#引数greeting_localに渡された値を表示する関数greeting\n","def greeting(greeting_local):\n","    print(greeting_local)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"ac07ae38-3f1b-4c32-815c-60c763d90ba9"},"id":"0zesxqa7tnFd"},"source":["関数を呼び出す際に引数に値を渡すことで、関数は受け取った値を処理することができます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"2333cd6e-8012-462f-9b02-3152f2d9dfcc"},"scrolled":true,"id":"anw-W1NhtnFg"},"source":["#関数greetingに文字列'Hello'を渡して呼び出し\n","greeting('Hello')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3Q8-3cyBtnFq"},"source":["このようにして引数に渡される値のことを、**実引数**（**argument**）と呼ぶことがあります。\n","実引数に対して、ここまで説明してきた引数（ローカル変数である引数）は、**仮引数**（**parameter**）と呼ばれます。\n","参考：[公式FAQ：実引数と仮引数の違いは何ですか？](https://docs.python.org/ja/3/faq/programming.html#what-is-the-difference-between-arguments-and-parameters)\n","\n","実引数のことを引数と呼ぶこともありますので、注意してください。"]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"13606d0d-c9de-42a8-98bf-af9c1b493dbf"},"id":"_YZE6XgBtnFr"},"source":["## 返値\n","関数は受け取った引数を元に処理を行い、その結果の**返値**（1-2で説明済み）を返すことができます。\n","\n","返値は、**`return`** で定義します。関数の返値がない場合は、**`None`** が返されます。\n","`return` が実行されると、関数の処理はそこで終了するため、次に文があっても実行はされません。\n","また、ループなどの繰り返し処理の途中でも `return` が実行されると処理は終了します。\n","関数の処理が最後まで実行され、返値がない場合は最後に `return` を実行したことと同じになります。\n","\n","`return` の後に式がない場合は、`None` が返されます。\n","（`return` が実行されずに関数の最後まで来たときも同様です。）\n","`return` を式なしで実行することで、関数の処理を途中で抜けることができます。\n","また、このような関数は、与えられた配列を破壊的に変更するなど、\n","呼び出した側に何らかの変化を及ぼす際にも用いられます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"2d182e8a-aecd-4299-a0dc-67550555db74"},"id":"3Maw9MNQtnFt"},"source":["#引数greeting_localに渡された値を返す関数greeting\n","def greeting(greeting_local):\n","    return greeting_local\n","\n","#関数greetingに文字列'Hello'を渡して呼び出し\n","greeting('Hello')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"nbpresent":{"id":"2e6d9cd0-4921-4616-944b-fd17b6f2b956"},"id":"fM9SL13LtnF2"},"source":["#入力の平均を計算して返す関数average\n","def average(nums):\n","    #組み込み関数のsum()とlen()を利用\n","    return sum(nums)/len(nums)\n","\n","#関数averageに数字のリストを渡して呼び出し\n","average([1,3,5,7,9])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"v3oCFtzhtnF-"},"source":["関数の返値を変数に代入することもできます。"]},{"cell_type":"code","metadata":{"id":"vzWEhQ8ctnGA"},"source":["#関数greetingの返値を変数greetに代入\n","greet = greeting('Hello')\n","greet"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"1f64a720-e5fd-4e8e-b810-061a71e14e32"},"id":"RkVSB4HwtnGJ"},"source":["## 複数の引数\n","関数は任意の数の引数を受け取ることができます。\n","複数の引数を受け取る場合は、引数をコンマで区切ります。\n","これらの引数名は重複しないようにしましょう。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"b05e5641-14c2-43fb-9977-2355e3855af0"},"id":"DtN4wIUEtnGK"},"source":["#3つの引数それぞれに渡された値を表示する関数greeting\n","def greeting(en, fr, de):\n","    print(en + ', ' + fr + ', ' + de)\n","    \n","#関数greetingに3つの引数を渡して呼び出し\n","greeting('Hello', 'Bonjour', 'Guten Tag')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"7a23ea7f-98ba-4a4d-846f-78182baa77fa"},"id":"3A9zhNdmtnGR"},"source":["関数は異なる型であっても引数として受け取ることができます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"73bdb776-de83-4de7-b6aa-930b1e9de870"},"id":"q4zohmEbtnGT"},"source":["#文字列と数値を引数として受け取る関数greeting\n","def greeting(en, number, name):\n","    #文字列に数を掛け算すると、文字列を数の回だけ繰り返すことを指定します\n","    print(en*number+','+name)\n","    \n","#関数greetingに文字列と数値を引数として渡して呼び出し\n","greeting('Hello',3, 'World')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"7e77726c-1e27-4472-95b2-0b9bf56d309f"},"id":"1EZByuWDtnGZ"},"source":["## 変数とスコープ\n","関数の引数や関数内で定義される変数はローカル変数のため、それらの変数は関数の外からは参照できません。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"ed375a17-cf40-4cad-a556-d7096fd5a60d"},"tags":["raises-exception"],"id":"4TFeUH4etnGa"},"source":["#引数greeting_localに渡された値を表示する関数greeting\n","def greeting(greeting_local):\n","    print(greeting_local)\n","    \n","greeting('Hello')  \n","\n","#ローカル変数（関数greetingの引数）greeting_localを参照\n","greeting_local"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"bed85e4b-fa27-4b34-995d-33e6bd77e695"},"id":"8LkGWIIrtnGe"},"source":["一方、変数が**グローバル変数**であれば、それらの変数は関数の外からも中からも参照できます。\n","グローバル変数とはプログラム全体、どこからでも利用可能な変数です。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"dd239c17-6c9e-4eff-af37-acbf61ac3d10"},"scrolled":false,"id":"T0MqhYDKtnGh"},"source":["#グローバル変数greeting_globalの定義\n","greeting_global = 'Hello'\n","\n","#グローバル変数greeting_globalの値を表示する関数greeting\n","def greeting():\n","    print(greeting_global)\n","    \n","greeting()\n","\n","#グローバル変数greeting_globalを参照\n","greeting_global"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"1929bd9b-727f-4c45-8c6a-291c1b919786"},"id":"55f-VvJBtnGn"},"source":["グローバル変数と同じ名前の変数を関数内で定義すると、\n","それは通常はグローバル変数とは異なる、関数内のみで利用可能な**ローカル変数**の定義として扱われます。\n","グローバル変数と同じ名前の引数を用いる場合も同様です。"]},{"cell_type":"code","metadata":{"id":"zkyFirAUtnGo"},"source":["#グローバル変数greeting_globalと同じ名前の変数に値を代入する関数greeting\n","def greeting():\n","    greeting_global = 'Bonjour'\n","    print(greeting_global)\n","\n","greeting()\n","\n","#変数greeting_globalを参照\n","greeting_global"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"68mTwA2ytnGt"},"source":["しかし、グローバル変数と同名のローカル変数を定義することは、一般に注意が必要です。\n","何故なら、ローカル変数としての定義を含む関数内では、同名のグローバル変数を参照できないからです。\n","たとえば、次のコードは、`Hello` と `Bonjour` が順に印字することを期待するかもしれませんが、"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"Lh5YWZVHtnGu"},"source":["def greeting():\n","    print(greeting_global) # 最初の参照\n","    greeting_global = 'Bonjour' # ローカル変数の定義\n","    print(greeting_global)\n","\n","greeting()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZvaPGkSWtnG0"},"source":["最初の `greeting_global` の参照でエラーになります。\n","これは、関数内に `greeting_global` の定義があると、\n","その関数内どの場所でも `greeting_global` がローカル変数として参照されるためです。\n","最初の参照時には、ローカル変数の `greeting_global` が未定義なので、エラーが生じます。\n","\n","このように、グローバル変数と同じ名前のローカル変数を使おうとするのは間違いの元です。\n","グローバル変数と名前が衝突しないように、ローカル変数を定義しましょう。"]},{"cell_type":"markdown","metadata":{"id":"2f4hOgrMtnG2"},"source":["### ▲ global 宣言\n","\n","関数内ではグローバル変数が更新されないのが基本です。\n","しかし、どうしても関数内でグローバル変数を更新したいときには、\n","**`global`** 宣言を使って更新したいグローバル変数を指定します。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"85f42699-a196-472e-b243-8f3401a8c80d"},"id":"nFQt0HvRtnG3"},"source":["#グローバル変数greeting_globalに値を代入する関数greeting\n","def greeting():\n","    global greeting_global\n","    greeting_global = 'Bonjour'\n","    print(greeting_global)\n","\n","greeting()\n","\n","##変数greeting_globalを参照\n","greeting_global"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bXLbxMYCtnG7"},"source":["`global` 宣言された変数名は、関数内で常にグローバル変数として参照されます。\n","これを濫用すると間違いの元になるので、原則として利用しないようにしましょう。"]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"c1bf67a6-1009-4a45-9d63-08ac24186d13"},"id":"vc-IE_JwtnG7"},"source":["## ▲キーワード引数\n","上記の一般的な引数（位置引数とも呼ばれます）では、\n","事前に定義した引数の順番に従って、関数は引数を受け取る必要があります。\n","\n","キーワード付き引数（**キーワード引数**）を使うと、関数は引数の変数名とその値の組みを受け取ることができます。\n","その際、引数は順不同で関数に渡すことができます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"0cadb423-7855-4277-acf7-e45041893543"},"id":"Jh9mPU2stnG8"},"source":["#文字列と数値を引数として受け取る関数greeting\n","def greeting(en, number, name):\n","    print(en*number+','+name)\n","\n","#関数greetingに引数の変数名とその値の組みを渡して呼び出し\n","greeting(en='Hello', name='Japan', number=2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"0286dc1b-3118-4928-9bec-16d4f980d398"},"id":"_1k88EMetnG_"},"source":["位置引数とキーワード引数を合わせて使う場合は、最初に位置引数を指定する必要があります。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"4efcff39-bb12-4a76-ac37-1a89ed91761d"},"id":"PELerNbctnG_"},"source":["#位置引数とキーワード引数を組み合わせた関数greetingの呼び出し\n","greeting('Hello', name='Japan', number=2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"d17c5099-d85c-432e-b19f-6939c51ccdc6"},"id":"WTp7nPsEtnHG"},"source":["## ▲引数の初期値\n","関数を呼び出す際に、引数が渡されない場合に、**初期値**を引数として渡すことができます。\n","\n","初期値のある引数に値を渡したら、関数はその引数の初期値の代わりに渡された値を受け取ります。\n","\n","初期値を持つ引数は、位置引数の後に指定する必要があります。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"19219a8e-d9c2-4b0f-9dae-5c9c7d0eecdb"},"id":"s3vArOoltnHH"},"source":["#引数の初期値（引数の変数enに対する'Hello'）を持つ関数greeting\n","def greeting(name, en='Hello'):\n","    print(en+', '+name)\n","    \n","#引数の初期値を持つ関数greetingの呼び出し\n","greeting('World')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"0201f64c-b0e4-4e25-ba4e-8ca782c24a40"},"id":"FrVZHCvxtnHK"},"source":["## ▲可変長引数\n","仮引数の前に **`*`** を付けて関数を定義すると、複数の引数をタプルとして受け取ることができます。\n","呼び出す側は、引数の個数を変えることができます。\n","一般に、個数が可変の引数は**可変長引数**と呼ばれます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"777cde18-6250-43ff-9b1e-00265cc69608"},"id":"Rg-OGGpqtnHL"},"source":["#可変長の引数を受け取り、それらを表示する関数greeting\n","def greeting(*args):\n","    print(args)\n","    \n","#可変長の引数を受け取る関数greetingに複数の引数を渡して呼び出し\n","greeting('Hello','Bonjour','Guten Tag')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"09c5e54f-a465-4fe5-902e-8bf75e010df7"},"id":"x1nhdvd3tnHP"},"source":["リストやタプルの要素を可変長引数として関数に渡す場合は、**`*`** をリストやタプルの前につけて渡します。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"5b079502-8b81-4efd-99b0-04fa615ec9dd"},"id":"Ke4N_6tUtnHP"},"source":["#リスト型オブジェクトgreeting_listを関数greetingに渡して呼び出し\n","greeting_list = ['Hello','Bonjour','Guten Tag']\n","greeting(*greeting_list)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"47ce69e1-691e-427d-aa21-23063d73cdae"},"id":"7HFidUyctnHT"},"source":["## ▲辞書型の可変長引数\n","仮引数の前に <strong>`**`</strong> を付けて関数を定義すると、複数のキーワード引数を辞書として受け取ることができます。辞書として受け取られる引数は、**辞書型の可変長引数**と呼ばれます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"7dcc0a7f-2ed4-485b-b73a-93f3e9b73ecf"},"id":"nFM2oIC4tnHU"},"source":["#可変長のキーワード引数を受け取り、それらを表示する関数greeting\n","def greeting(**kwargs):\n","    print(kwargs)\n","    \n","#可変長のキーワード引数を受け取る関数greetingに複数の引数を渡して呼び出し\n","greeting(en='Hello', fr='Bonjour', de='Guten Tag')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"718a8f3d-d197-44d1-a7e0-176e38786e94"},"id":"oSj1P5sStnHX"},"source":["辞書の各キーと値を複数のキーワード引数として関数に渡す場合は、\n","`**` をその辞書の前につけて渡します。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"159d31eb-1113-4abe-be4d-49beb2636dd4"},"id":"lmrvxbectnHY"},"source":["#辞書型オブジェクトgreeting_dictを関数greetingに渡して呼び出し\n","greeting_dict = {'en': 'Hello', 'fr': 'Bonjour', 'de': 'Guten Tag'}\n","greeting(**greeting_dict)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"55f2497f-0912-46ac-85cc-1e522bc432be"},"id":"3H0TNO1gtnHa"},"source":["## ▲引数の順番\n","位置引数、初期値を持つ引数、可変長引数、辞書型の可変長引数は、同時に指定することができますが、\n","その際、これらの順番で指定する必要があります。\n","\n","```Python\n","def 関数名(位置引数, 初期値を持つ引数, 可変長引数, 辞書型の可変長引数)\n","```"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"9ef51ef5-93a6-4c6f-a62f-92447211ec1e"},"id":"TkiZf1adtnHa","executionInfo":{"status":"ok","timestamp":1601084081577,"user_tz":-540,"elapsed":1461,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"239acf23-67d6-4d88-beaf-c60466b937da","colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["#位置引数、初期値を持つ引数、可変長引数、辞書型の可変長引数\n","#それぞれを引数として受け取り、それらを表示する関数greeting\n","def greeting(greet, en='Hello', *args, **kwargs):\n","    print(greet)\n","    print(en)\n","    print(args)\n","    print(kwargs)\n","\n","#可変長引数へ渡すリスト\n","greeting_list = ['Bonjour']\n","\n","#辞書型の可変長引数へ渡す辞書\n","greeting_dict = {'de': 'Guten Tag'}\n","\n","#関数greetingに引数を渡して呼び出し\n","greeting('Hi', 'Hello', *greeting_list, **greeting_dict)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Hi\n","Hello\n","('Bonjour',)\n","{'de': 'Guten Tag'}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"nbpresent":{"id":"7baf73c0-c085-4e69-824e-71927749d767"},"id":"zRZaSjYXtnHd"},"source":["## ▲変数としての関数\n","関数は変数でもあります。既存の変数と同じ名前の関数を定義すると、\n","元の変数はその新たな関数を参照するものとして変更されます。\n","一方、既存の関数と同じ名前の変数を定義すると、元の関数名の変数はその新たな変数を参照するものとして変更されます。"]},{"cell_type":"code","metadata":{"nbpresent":{"id":"07dd996c-41dc-4a08-9d5a-4a2f6904e87b"},"scrolled":false,"id":"sU9B4IUwtnHd","executionInfo":{"status":"ok","timestamp":1601084124692,"user_tz":-540,"elapsed":1641,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"8a2c5822-4703-427a-c103-26b36c993c72","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#グローバル変数greeting_globalの定義と参照\n","greeting_global = 'Hello'\n","type(greeting_global)"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"nbpresent":{"id":"f08dd351-490b-41af-b723-32ddc01da37b"},"id":"nr-EYDRktnHg","executionInfo":{"status":"ok","timestamp":1601084130866,"user_tz":-540,"elapsed":1696,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"cd3ac105-7b28-42a6-bb80-40f8e5b102c5","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#グローバル変数greeting_globalと同名の関数の定義\n","#変数greeting_globalは関数を参照する\n","def greeting_global():\n","    print('This is the greeting_global function')\n","    \n","type(greeting_global)"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["function"]},"metadata":{"tags":[]},"execution_count":3}]}]}