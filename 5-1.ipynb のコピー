{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"},"colab":{"name":"5-1.ipynb のコピー","provenance":[{"file_id":"https://github.com/UTokyo-IPP/utpython/blob/master/5/5-1.ipynb","timestamp":1601184630656}]}},"cells":[{"cell_type":"code","metadata":{"id":"wPLLDoa4CnKx","executionInfo":{"status":"ok","timestamp":1601184653704,"user_tz":-540,"elapsed":1103,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"fc2cb97f-876e-425c-c618-4847a9fb7493","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["##====================================================\n","## このセルを最初に実行せよ---Run this cell initially.\n","##====================================================\n","import sys\n","if 'google.colab' in sys.modules:\n","    !wget -P . https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/5/factorial.py"],"execution_count":1,"outputs":[{"output_type":"stream","text":["--2020-09-27 05:30:52--  https://raw.githubusercontent.com/UTokyo-IPP/utpython/master/5/factorial.py\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 109 [text/plain]\n","Saving to: ‘./factorial.py’\n","\n","factorial.py        100%[===================>]     109  --.-KB/s    in 0s      \n","\n","2020-09-27 05:30:53 (3.85 MB/s) - ‘./factorial.py’ saved [109/109]\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"pp-oyG5GCnK_"},"source":["# 5-1. モジュールの使い方\n","モジュールの使い方について説明します。\n","\n","参考\n","\n","- https://docs.python.org/ja/3/reference/import.html\n","- https://docs.python.org/ja/3/tutorial/modules.html\n","- https://docs.python.org/ja/3/library/math.html\n","\n","## モジュールのインポート\n","\n","Pythonでは特別な関数や値をまとめたもの（これを**モジュール**といいます）を使うために、**`import`** という文を使います（第1回 (1-1) においても説明しました）。具体的には次のように記述します。\n","\n","---\n","```Python\n","import モジュール名\n","```\n","---\n","\n","たとえば、数学関係の機能をまとめた `math` というモジュールがあります。これらの関数や値を使いたいときは、以下のようにして `math` モジュールを `import` で**インポート**します。そうすると、`math.関数名` という形で関数を用いることができます。 "]},{"cell_type":"code","metadata":{"id":"g_Zyk1YaCnLA","executionInfo":{"status":"ok","timestamp":1601184712171,"user_tz":-540,"elapsed":912,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"e1bce9c8-7cc6-40be-bd7b-833b2d6581ef","colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["import math# importは大抵セルの一番上に記述します\n","print(math.sqrt(2)) # sqrt は平方根を計算する関数\n","print(math.pi) # πの値\n","print(math.sin(math.pi/4)) # sin関数 \n","print(math.cos(0)) # cos関数 \n","print(math.log(32,2)) # 2を底とする32の対数（texで記述すると、$\\log_2 32$）"],"execution_count":2,"outputs":[{"output_type":"stream","text":["1.4142135623730951\n","3.141592653589793\n","0.7071067811865475\n","1.0\n","5.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"0vpaN9nNCnLK"},"source":["上の例では、`math` モジュールの中の関数や値を使用しています。\n","\n","注意しなければならないのは、モジュールの中の関数を使う場合には、\n","\n","---\n","```Python\n","モジュール名.モジュールの中の関数名\n","```\n","---\n","\n","とする必要があるということです。\n","\n","モジュールの中の値（たとえば `math.pi`）も同様です。\n","\n","なお、複数の関数名をコンマ `,` で区切って並べて同時にインポートすることもできます。"]},{"cell_type":"markdown","metadata":{"id":"1DMGgJinCnLM"},"source":["## `from`\n","\n","モジュール内で定義されている関数を「モジュールの中の関数名」のようにして、「モジュール名.」を付けずにそのままの名前で、モジュールの読み込み元のプログラムで使いたい場合には、**`from`** を以下のように書くことで利用することができます。\n","\n","---\n","```Python\n","from モジュール名 import モジュールの中の関数名\n","```\n","---\n","\n","たとえば、次のようになります。"]},{"cell_type":"code","metadata":{"id":"rLf7VW0rCnLN","executionInfo":{"status":"ok","timestamp":1601184786162,"user_tz":-540,"elapsed":1492,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"852750c5-678c-464f-81a9-a57575cc72c2","colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["from math import sqrt\n","print(sqrt(2)) # sqrt は平方根を計算する関数 \n","from math import pi\n","print(pi) # πの値\n","from math import sin\n","print(sin(math.pi/4)) # sin関数 \n","from math import cos\n","print(cos(0)) # cos関数 \n","from math import log\n","print(log(32,2)) # 2を底とする32の対数（texで記述すると、$\\log_2 32$）"],"execution_count":3,"outputs":[{"output_type":"stream","text":["1.4142135623730951\n","3.141592653589793\n","0.7071067811865475\n","1.0\n","5.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"FitC3EjPCnLX"},"source":["この方法では、関数ごとに `from` を用いてインポートする必要があります。\n","\n","なお、関数だけではなく、グローバル変数や後に学習するクラスも、\n","このようにしてインポートすることができます。\n","\n","別の方法として、**ワイルドカード** **`*`** を利用する方法もあります。\n","\n","---\n","```Python\n","from math import *\n","```\n","---\n","\n","この方法ではアンダースコア `_` で始まるものを除いた全ての名前が読み込まれるため、明示的に名前を指定する必要はありません。\n"]},{"cell_type":"code","metadata":{"id":"iOEdBu_xCnLZ","executionInfo":{"status":"ok","timestamp":1601184857184,"user_tz":-540,"elapsed":915,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"a8f21366-00e8-4613-8c05-74f83393a166","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["from math import *\n","print(factorial(5)) # 5 の階乗 # import mathを使う場合、math.factorial(5)\n","print(floor(2.31)) # 2.31以下の最大の整数  # import mathを使う場合、math.floor(2.31)\n","print(e) # ネイピア数 # import mathを使う場合、math.e"],"execution_count":4,"outputs":[{"output_type":"stream","text":["120\n","2\n","2.718281828459045\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4KewbOscCnLg"},"source":["ただしこの方法は推奨されていません。理由は読み込んだモジュール内の未知の名前とプログラム内の名前が衝突する可能性があるためです。"]},{"cell_type":"code","metadata":{"id":"pH8w5mlZCnLi","executionInfo":{"status":"ok","timestamp":1601184875836,"user_tz":-540,"elapsed":2191,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"e1464953-2ae7-488d-9c07-a57d07f73d39","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["pi = 'パイ' # piという変数に文字列「パイ」を代入する\n","print(pi) \n","from math import *\n","print(pi) # mathモジュールのpiの値で上書きされる（衝突）"],"execution_count":5,"outputs":[{"output_type":"stream","text":["パイ\n","3.141592653589793\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"d31dEKuECnLs"},"source":["## `as`\n","\n","モジュール名が長すぎるなどの理由から別の名前としたい場合は、**`as`** を利用する方法もあります。\n","たとえば、5-3において学習するNumPyというライブラリは `numpy` モジュールとして提供されていますが、\n","次のように、 `numpy` を `np` という略称で使うことがあります。"]},{"cell_type":"code","metadata":{"id":"9bvkHzkwCnLv","executionInfo":{"status":"ok","timestamp":1601184892937,"user_tz":-540,"elapsed":2471,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"4b275752-da4a-458a-b2d0-c2107a35ee06","colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["import numpy\n","print(numpy.ones((3, 5))) # 3×5の行列を表示\n","import numpy as np\n","print(np.ones((3, 5))) # np という短い名称で同じ関数を利用する"],"execution_count":6,"outputs":[{"output_type":"stream","text":["[[1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]]\n","[[1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"TmevEr7VCnL8"},"source":["個々の関数ごとに別の名前を付けることもできます。"]},{"cell_type":"code","metadata":{"id":"iJcy37zeCnL-","executionInfo":{"status":"ok","timestamp":1601184918265,"user_tz":-540,"elapsed":4474,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"2de43056-48f2-40b4-f282-7c48df67645d","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["import math\n","print(math.factorial(5)) # 階乗を求める関数factorial # 5の階乗\n","from math import factorial as fact # fact という名前でmath.factorialを使用したい\n","print(fact(5))"],"execution_count":7,"outputs":[{"output_type":"stream","text":["120\n","120\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_MUxzswRCnMF"},"source":["## 練習\n","第1回では、数学関数を以下のようにインポートし、`math.sqrt()` のようにして、数学関数や数学関係の変数を利用していました。\n","\n","---\n","```Python\n","import math\n","print(math.sqrt(2))\n","print(math.sin(math.pi))\n","```\n","\n","---\n","\n","以下のセルを、モジュール名を付けないでこれらの関数や変数を参照できるように変更してください。"]},{"cell_type":"code","metadata":{"tags":["raises-exception"],"id":"4j1KHHCZCnMI","executionInfo":{"status":"ok","timestamp":1601184994235,"user_tz":-540,"elapsed":885,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"6f196eb8-3d83-4b8b-cbfc-0ea5df26d558","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["from math import sqrt\n","from math import sin\n","from math import pi\n","print(sqrt(2))\n","print(sin(pi))"],"execution_count":10,"outputs":[{"output_type":"stream","text":["1.4142135623730951\n","1.2246467991473532e-16\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"EmEMgiu9CnMN"},"source":["## 練習の解答\n","\n","`from` を使ってモジュールを指定、参照する関数を `import` でインポートしてください。 "]},{"cell_type":"code","metadata":{"id":"JkSJp_FTCnMO"},"source":["from math import sqrt, sin, pi\n","print(sqrt(2))\n","print(sin(pi))"],"execution_count":null,"outputs":[]}]}