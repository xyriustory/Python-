{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"name":"ex1.ipynb のコピー","provenance":[{"file_id":"https://github.com/UTDataMining/2020A/blob/master/ex1/ex1.ipynb","timestamp":1601883445324}]}},"cells":[{"cell_type":"markdown","metadata":{"id":"2TU73pYTsYig"},"source":["# 課題1 データの基本的な記述統計の計算\n","データの特徴を指標（統計値）によって記述することを記述統計と呼びます。データ分析の過程で、記述統計は分析対象のデータを観察し、理解するのに用いられます。\n","\n","記述統計により対象データを理解することは、データの前処理（欠損値、外れ値、異常値の処理）の準備にもなります。\n","\n","記述統計および前処理について次回以降の授業で詳しく説明します。\n","\n","代表的な記述統計に平均があります。平均はデータの中心傾向を記述するための指標で、データが$n$個の数値要素からなる場合、平均は以下のように計算できます。$x_{i}$はデータの各要素を表しています。\n","\n","$\\frac{1}{n}\\Sigma^{n}_{i=1}x_{i}$\n","\n","以下では、Pythonの基礎で学んだ内容を元にして、数値データの平均に加えて最大値、最小値を求めるPythonコードを実装します。\n","\n","配点\n","- Q1 5P\n","- Q2 5P"]},{"cell_type":"markdown","metadata":{"id":"Vkk_YmI-sYih"},"source":["## Q1\n","非負の整数（最大でも10,000,000とする）を要素とする任意の長さのリストを引数で入力として受け取り、以下を要素とするリストを返す`avg_max_min`関数を完成させてください。\n","- 入力リストの全ての要素の平均値\n","- 入力リストの全ての要素の中で最大の値\n","- 入力リストの全ての要素の中で最小の値"]},{"cell_type":"code","metadata":{"id":"83Jk7yS9sYii","executionInfo":{"status":"ok","timestamp":1601889947183,"user_tz":-540,"elapsed":839,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["def avg_max_min(input_list):\n","    avg_value=0 # 平均値を初期化\n","    max_value=-1 # 最大値を初期化\n","    min_value= 10**7 # 最小値を初期化    \n","    sum_value=0 # 要素の和を初期化\n","    results=[] # 結果のリスト\n","    \n","    for value in input_list:### 入力リストの要素を取り出す繰り返しのコード ###\n","        sum_value = sum_value + value### 要素の和を更新するコード ###\n","        \n","        if max_value < value:### 最大値を更新する条件のコード ### \n","            max_value = value### 最大値を更新するコード ###\n","            \n","        if value < min_value:### 最小値を更新する条件のコード ###\n","            min_value = value### 最小値を更新するコード ###\n","        \n","    avg_value =  sum_value/len(input_list)### 平均値を計算するコード ###   \n","    \n","    results.append(avg_value) \n","    results.append(max_value)\n","    results.append(min_value)\n","    return results    "],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6fhBkvCZsYio"},"source":["`avg_max_min`関数が完成したら、以下のセルを実行して動作を確認してください。"]},{"cell_type":"code","metadata":{"id":"pMlOrRnnsYip","executionInfo":{"status":"ok","timestamp":1601889951552,"user_tz":-540,"elapsed":802,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"2d00d680-f765-463a-f491-301659d76dc0","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["avg_max_min([30,39,29,95,70,67,29,56,45,68])"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[52.8, 95, 29]"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"nKjbDFZXsYit"},"source":["以下のセルを実行して、実行結果が上記と同じであること確認してください。結果が異なる場合は、作成した`avg_max_min`関数に誤りがないか確認してください。"]},{"cell_type":"code","metadata":{"id":"Hxw_KsudsYit","executionInfo":{"status":"ok","timestamp":1601889973411,"user_tz":-540,"elapsed":622,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"d4002f70-05ef-4f6e-b12b-5070614d1778","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# avg_max_min関数の結果を検証するための関数\n","def avg_max_min_test(input_list):\n","    return [sum(input_list)/len(input_list), max(input_list), min(input_list)]\n","\n","avg_max_min_test([30,39,29,95,70,67,29,56,45,68])"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[52.8, 95, 29]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"MMyT03LOsYix","executionInfo":{"status":"ok","timestamp":1601889982135,"user_tz":-540,"elapsed":646,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["assert avg_max_min([30,39,29,95,70,67,29,56,45,68]) == avg_max_min_test([30,39,29,95,70,67,29,56,45,68])"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HATHgYbNsYiz"},"source":["## Q2\n","以下のような形式の\"SSDSE.csv\"ファイルを読み込み、\"人口総数\", \"人口総数(男)\", \"人口総数(女)\"、の各列に対応するキーを、\"total\", \"male\", \"female\"、として、各列の平均値、最大値、最小値のリストを値に持つ以下のような辞書を返す`population_stat`関数を完成させてください。その際、先に作成した`avg_max_min`関数を利用してください。\n","```Python\n","## SSDSE.csvファイル\n","code, prefecture, municipality, A1101,\tA110101, A110102, ...\n","地域コード, 都道府県, 市区町村, 人口総数, 人口総数（男）, 人口総数（女）, ...\n","R01100, 北海道, 札幌市, 1952356, 910614, 1041742\n","R01202, 北海道, 函館市, 265979, 120376, 145603\n","R01203, 北海道, 小樽市, 121924, 54985, 66939\n","...\n","\n","## 結果の辞書\n","{'total': ['人口総数の平均', '人口総数の最大値', '人口総数の最小値'],\n"," 'male': ['人口総数（男）の平均', '人口総数（男）の最大値', '人口総数（男）の最小値'],\n"," 'female': ['人口総数（女）の平均', '人口総数（女）の最大値', '人口総数（女）の最小値']}\n","```\n","\n","### 参考\n","\n","- [教育用標準データセット](https://www.nstac.go.jp/SSDSE/)"]},{"cell_type":"code","metadata":{"id":"NoLZQzbZsYiz","executionInfo":{"status":"ok","timestamp":1601890012237,"user_tz":-540,"elapsed":727,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"7009fba7-6767-411a-cfc9-3eb98cb14abe","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["# Colaboratoryでは以下を実行して必要なファイルをダウンロード\n","!wget https://raw.githubusercontent.com/UTDataMining/2020A/master/ex1/SSDSE.csv"],"execution_count":5,"outputs":[{"output_type":"stream","text":["--2020-10-05 09:26:51--  https://raw.githubusercontent.com/UTDataMining/2020A/master/ex1/SSDSE.csv\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 867732 (847K) [text/plain]\n","Saving to: ‘SSDSE.csv’\n","\n","\rSSDSE.csv             0%[                    ]       0  --.-KB/s               \rSSDSE.csv           100%[===================>] 847.39K  --.-KB/s    in 0.05s   \n","\n","2020-10-05 09:26:51 (15.4 MB/s) - ‘SSDSE.csv’ saved [867732/867732]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wU4QyQR8sYi1","executionInfo":{"status":"ok","timestamp":1601890295065,"user_tz":-540,"elapsed":556,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["import csv\n","\n","def population_stat():\n","    total=[] # 人口総数のリストを初期化\n","    male=[] # 人口総数(男)のリストを初期化\n","    female=[] # 人口総数(女)のリストを初期化\n","    \n","    with open('SSDSE.csv', 'r', encoding=\"utf-8\") as handler: # ファイルオープン\n","        csv_reader = csv.reader(handler) \n","        for row in csv_reader: # 1行ずつ読み込み\n","            if csv_reader.line_num > 2: # 3行以降を処理する\n","                ### 各市町村の人口総数, int(row[3]), をtotalに追加するコード ###\n","                total.append(int(row[3]))\n","                ### 各市町村の人口総数(男), int(row[4]), をmaleに追加するコード ###\n","                male.append(int(row[4]))\n","                ### 各市町村の人口総数(女), int(row[5]), をfemaleに追加するコード ###\n","                female.append(int(row[5]))\n","    total_stat = avg_max_min(total)### 人口総数の平均値、最大値、最小値のリストを計算するコード###\n","    male_stat = avg_max_min(male)### 人口総数（男）の平均値、最大値、最小値のリストを計算するコード###\n","    female_stat = avg_max_min(female)### 人口総数（女）の平均値、最大値、最小値のリストを計算するコード###\n","    \n","    results={\"total\":total_stat, \"male\":male_stat, \"female\":female_stat} # 結果の辞書\n","    return results"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ut7w128ysYi3"},"source":["`poplation_stat`関数が完成したら、以下のセルを実行して動作を確認してください。"]},{"cell_type":"code","metadata":{"id":"RLDOavMusYi3","executionInfo":{"status":"ok","timestamp":1601890298105,"user_tz":-540,"elapsed":718,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"9fe5f297-bd22-45c7-bcca-cdfa6d59597c","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["population_stat()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'female': [37480.18782309018, 1868859, 0],\n"," 'male': [35520.814474439976, 1855985, 0],\n"," 'total': [73001.00229753015, 3724844, 0]}"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"Iej7xFXDsYi4"},"source":["以下のセルを実行して、実行結果が上記と同じであること確認してください。結果が異なる場合は、作成した`population_stat`関数に誤りがないか確認してください。"]},{"cell_type":"code","metadata":{"id":"MpG3lQpusYi5","executionInfo":{"status":"ok","timestamp":1601890303703,"user_tz":-540,"elapsed":617,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}},"outputId":"b2380278-a69b-41d6-8223-bebfdb643b22","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["import pandas as pd\n","\n","def population_stat_test():\n","    stat = pd.read_csv('SSDSE.csv',  skiprows=[1])\n","    return {\"total\":[stat['A1101'].mean(), stat['A1101'].max(), stat['A1101'].min()],\\\n","                 \"male\":[stat['A110101'].mean(), stat['A110101'].max(), stat['A110101'].min()], \\\n","                 \"female\":[stat['A110102'].mean(), stat['A110102'].max(), stat['A110102'].min()]}\n","\n","population_stat_test()"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'female': [37480.18782309018, 1868859, 0],\n"," 'male': [35520.814474439976, 1855985, 0],\n"," 'total': [73001.00229753015, 3724844, 0]}"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"qRvrIfatsYi7","executionInfo":{"status":"ok","timestamp":1601890313393,"user_tz":-540,"elapsed":787,"user":{"displayName":"Reon Akiyama","photoUrl":"","userId":"04074901317082462028"}}},"source":["assert population_stat() ==  population_stat_test()"],"execution_count":11,"outputs":[]}]}